{"version":3,"file":"component---src-pages-contact-tsx-f76be643ed9e74f0c1ab.js","mappings":"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","sources":["webpack://aurora-code/./node_modules/classnames/index.js","webpack://aurora-code/./src/hooks/useSiteMetadata.ts","webpack://aurora-code/./src/components/SEO.tsx","webpack://aurora-code/./src/components/ScrollWatch.tsx","webpack://aurora-code/./src/components/Header.tsx","webpack://aurora-code/./src/components/Footer.tsx","webpack://aurora-code/./src/components/Hero.tsx","webpack://aurora-code/./src/hooks/useArticles.ts","webpack://aurora-code/./src/components/BlogSection.tsx","webpack://aurora-code/./node_modules/react-hook-form/dist/index.esm.mjs","webpack://aurora-code/./src/pages/contact.tsx"],"sourcesContent":["/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import { graphql, useStaticQuery } from \"gatsby\";\n\nexport const useSiteMetadata = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n          twitterUsername\n          image\n          siteUrl\n        }\n      }\n    }\n  `);\n\n  return data.site.siteMetadata;\n};\n","import React from \"react\";\nimport { useSiteMetadata } from \"../hooks/useSiteMetadata\";\n\ninterface SEOProps {\n  title?: string;\n  description?: string;\n  pathname?: string;\n  children?: React.ReactNode;\n}\n\nexport const SEO = ({ title, description, pathname, children }: SEOProps) => {\n  const {\n    title: defaultTitle,\n    description: defaultDescription,\n    image,\n    siteUrl,\n    twitterUsername,\n  } = useSiteMetadata();\n\n  const seo = {\n    title: title ? `${defaultTitle} - ${title}` : defaultTitle,\n    description: description || defaultDescription,\n    image: `${siteUrl}${image}`,\n    url: `${siteUrl}${pathname || ``}`,\n    twitterUsername,\n  };\n\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta\n        name=\"keywords\"\n        content=\"software development, custom software, business growth, web development, web development company, mobile development, mobile development company, web3 development, blockchain development, AI development, software consulting, software agency, web development team, software development team, web application, remote software development agency, startup development, startup web development, startup mobile development, javascript development, JS development, react development, node.js development, next.js development, react native development, product development, remote product development, aurora, aurora code\"\n      />\n      <meta name=\"author\" content=\"Aurora Code\" />\n      <meta name=\"robots\" content=\"index, follow\" />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:creator\" content={seo.twitterUsername} />\n\n      {/* LogRocket */}\n      <script\n        src=\"https://cdn.lr-in-prod.com/LogRocket.min.js\"\n        crossOrigin=\"anonymous\"\n      ></script>\n      <script>\n        window.LogRocket &&\n        window.LogRocket.init(\"sry39u/aurora-code-homepage\");\n      </script>\n\n      {children}\n    </>\n  );\n};\n","import classNames from \"classnames\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\ninterface ScrollWatchProps {\n  as: React.ElementType;\n  children?: React.ReactNode;\n  className?: string;\n  threshold?: string;\n}\n\nexport const ScrollWatch = ({\n  as,\n  children,\n  className,\n  threshold = \"0\",\n}: ScrollWatchProps) => {\n  const Component = as;\n  const ref = useRef(null);\n  const [isVisible, setIsVisible] = useState(false);\n\n  const isInViewport = useIsInViewport(ref);\n\n  useEffect(() => {\n    if (isInViewport && !isVisible) {\n      setTimeout(() => {\n        setIsVisible(true);\n      }, +threshold * 1000);\n    }\n  }, [isInViewport, isVisible]);\n\n  return (\n    <Component\n      ref={ref}\n      className={classNames(className, { \"_watcher-view\": isVisible })}\n    >\n      {children}\n    </Component>\n  );\n};\n\nfunction useIsInViewport(ref: any) {\n  const [isIntersecting, setIsIntersecting] = useState(false);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(([entry]) =>\n      setIsIntersecting(entry.isIntersecting)\n    );\n\n    observer.observe(ref.current);\n\n    return () => {\n      observer.disconnect();\n    };\n  }, [ref]);\n\n  return isIntersecting;\n}\n","import classNames from \"classnames\";\nimport React, { useCallback, useEffect, useState } from \"react\";\n\nexport const Header = ({\n  withScroll = false,\n  onHomePage = false,\n}: {\n  withScroll?: boolean;\n  onHomePage?: boolean;\n}) => {\n  const [isDesktop, setIsDesktop] = useState(false);\n  const [hasScrolled, setHasScrolled] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [areIndustriesExpanded, setAreIndustriesExpanded] = useState(false);\n\n  const trackScroll = useCallback(() => {\n    const updatedHasScrolled = window.pageYOffset > 0;\n\n    setHasScrolled(updatedHasScrolled);\n  }, []);\n\n  useEffect(() => {\n    if (window.innerWidth > 768) {\n      setIsDesktop(true);\n    }\n\n    if (withScroll) {\n      if (window.pageYOffset > 0) {\n        setHasScrolled(true);\n      }\n\n      function watchScroll() {\n        window.addEventListener(\"scroll\", trackScroll);\n      }\n      watchScroll();\n      return () => {\n        window.removeEventListener(\"scroll\", trackScroll);\n      };\n    }\n  }, []);\n\n  if (!isDesktop) {\n    return (\n      <div\n        className={classNames(\"header\", {\n          \"menu-open\": isExpanded,\n          \"_header-scroll\": hasScrolled || !withScroll,\n        })}\n      >\n        <div className=\"header__container\">\n          <div className=\"header__menu menu\">\n            <a href=\"/\" className=\"header__logo\">\n              <img src=\"/images/logo-header.svg\" alt=\"logo\" />\n            </a>\n            <button\n              type=\"button\"\n              className=\"menu__icon icon-menu\"\n              onClick={() => setIsExpanded((x) => !x)}\n            >\n              <span></span>\n            </button>\n          </div>\n        </div>\n        {isExpanded && (\n          <div className=\"header__mobile-menu\">\n            <ul className=\"mobile_menu__list\">\n              <li>\n                <a href=\"/#services\" onClick={() => setIsExpanded(false)}>\n                  Services\n                </a>\n              </li>\n              <li>\n                <a href=\"/#case-studies\" onClick={() => setIsExpanded(false)}>\n                  Case studies\n                </a>\n              </li>\n              <li>\n                <a onClick={() => setAreIndustriesExpanded((x) => !x)}>\n                  Industries\n                </a>\n                <ul className={\"menu__mobile_dropdown is-open\"}>\n                  <li>\n                    <a href=\"/industry/fintech\">Fintech</a>\n                  </li>\n                  <li>\n                    <a href=\"/industry/data-and-ai\">\n                      Data & AI\n                    </a>\n                  </li>\n                  <li>\n                    <a href=\"/industry/social-network-community\">\n                      Social Network\n                    </a>\n                  </li>\n                  <li>\n                    <a href=\"/industry/health-and-fitness\">Health & Fitness</a>\n                  </li>\n                </ul>\n              </li>\n              <li>\n                {onHomePage ? (\n                  <a href=\"/#blog\" onClick={() => setIsExpanded(false)}>\n                    Blog\n                  </a>\n                ) : (\n                  <a target=\"_blank\" href=\"https://blog.auroracode.io\">\n                    Blog\n                  </a>\n                )}\n              </li>\n              <li>\n                <a href=\"/#contact-us\" onClick={() => setIsExpanded(false)}>\n                  Contact\n                </a>\n              </li>\n            </ul>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <header\n      className={classNames({\n        header: true,\n        \"_header-scroll\": hasScrolled || !withScroll,\n      })}\n    >\n      <div className=\"header__container\">\n        <div className=\"header__menu menu\">\n          <a href=\"/\" className=\"header__logo\">\n            <img src=\"/images/logo-header.svg\" alt=\"logo\" />\n          </a>\n          <button type=\"button\" className=\"menu__icon icon-menu\">\n            <span></span>\n          </button>\n          <nav className=\"menu__body\">\n            <ul className=\"menu__list\">\n              <li>\n                <a href=\"/#services\">Services</a>\n              </li>\n              <li>\n                <a href=\"/#case-studies\">Case studies</a>\n              </li>\n              <li\n                onMouseEnter={() => setAreIndustriesExpanded(true)}\n                onMouseLeave={() => setAreIndustriesExpanded(false)}\n              >\n                <a onClick={() => setIsExpanded(false)}>Industries</a>\n                <ul\n                  className={classNames(\"menu__dropdown\", {\n                    \"is-open\": areIndustriesExpanded,\n                  })}\n                >\n                  <li>\n                    <a href=\"/industry/fintech\">Fintech</a>\n                  </li>\n                  <li>\n                    <a href=\"/industry/data-and-ai\">\n                      Data & AI\n                    </a>\n                  </li>\n                  <li>\n                    <a href=\"/industry/social-network-community\">\n                      Social Network\n                    </a>\n                  </li>\n                  <li>\n                    <a href=\"/industry/health-and-fitness\">Health & Fitness</a>\n                  </li>\n                </ul>\n              </li>\n              <li>\n                {onHomePage ? (\n                  <a href=\"/#blog\">Blog</a>\n                ) : (\n                  <a target=\"_blank\" href=\"https://blog.auroracode.io\">\n                    Blog\n                  </a>\n                )}\n              </li>\n            </ul>\n          </nav>\n          <a href=\"#contact-us\" className=\"header__user-button\">\n            <span>Contact Us</span>\n          </a>\n        </div>\n      </div>\n    </header>\n  );\n};\n","import React from \"react\";\nimport { ScrollWatch } from \"./ScrollWatch\";\n\nexport const Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <div className=\"footer__container\">\n        <div onClick={() => window.scrollTo(0, 0)}>\n          <ScrollWatch\n            as=\"div\"\n            threshold=\"0.2\"\n            className=\"footer-top__go-up anim-upwards1\"\n          ></ScrollWatch>\n        </div>\n\n        <div className=\"footer-top\">\n          <div className=\"footer-top__content\">\n            <div className=\"footer-top__column left\">\n              <img className=\"footer-logo\" src=\"/images/logo.svg\" alt=\"logo\" />\n              <div className=\"footer-top__contacts\">\n                <h4 className=\"footer-title\">Address:</h4>\n                <div className=\"footer__text\">\n                  1309 Coffeen Avenue, Sheridan, WY, 82801\n                </div>\n                <h4 className=\"footer-title\">Contact:</h4>\n                <a href=\"tel:2705550117\">(307) 275-3623</a>\n                <a href=\"mailto:support@auroracode.io\">support@auroracode.io</a>\n              </div>\n            </div>\n            <div className=\"footer-top__column right\">\n              <div className=\"footer-top__links\">\n                <div className=\"footer-top__links-column\">\n                  <h4 className=\"footer-title\">Services</h4>\n                  <ul>\n                    <li>\n                      <a href=\"/#kickstart\">Kickstart</a>\n                    </li>\n                    <li>\n                      <a href=\"/#superb\">Superb</a>\n                    </li>\n                    <li>\n                      <a href=\"/#elevate\">Elevate</a>\n                    </li>\n                  </ul>\n                </div>\n                <div className=\"footer-top__links-column\">\n                  <h4 className=\"footer-title\">Industries</h4>\n                  <ul>\n                    <li>\n                      <a href=\"/industry/fintech\">Fintech</a>\n                    </li>\n                    <li>\n                      <a href=\"/industry/data-and-ai\">\n                        Data & AI\n                      </a>\n                    </li>\n                    <li>\n                      <a href=\"/industry/social-network-community\">\n                        Social Network\n                      </a>\n                    </li>\n                    <li>\n                      <a href=\"/industry/health-and-fitness\">\n                        Health & Fitness\n                      </a>\n                    </li>\n                  </ul>\n                </div>\n                <div className=\"footer-top__links-column\">\n                  <h4 className=\"footer-title\">About</h4>\n                  <ul>\n                    <li>\n                      <a href=\"/#services\">Services</a>\n                    </li>\n                    <li>\n                      <a href=\"/#case-studies\">Case Studies</a>\n                    </li>\n                    <li>\n                      <a href=\"/#blog\">Blog</a>\n                    </li>\n                    <li>\n                      <a href=\"/#contact-us\">Contact Us</a>\n                    </li>\n                  </ul>\n                </div>\n                <div className=\"footer-top__links-column\">\n                  <h4 className=\"footer-title\">Follow Us</h4>\n                  <ul>\n                    <li>\n                      <a\n                        href=\"https://www.linkedin.com/company/aurora-code-factory/\"\n                        target=\"_blank\"\n                      >\n                        <img\n                          className=\"logo-linkedin\"\n                          src=\"/images/icons/linkedin.svg\"\n                          alt=\"LinkedIn\"\n                        />\n                        LinkedIn\n                      </a>\n                    </li>\n                    <li>\n                      <a\n                        href=\"https://twitter.com/aurora_code_io\"\n                        target=\"_blank\"\n                      >\n                        <img\n                          className=\"logo-twitter\"\n                          src=\"/images/icons/twitter.svg\"\n                          alt=\"Twitter\"\n                        />\n                        Twitter\n                      </a>\n                    </li>\n                    {/* <!-- <li>\n              <a\n                href=\"https://www.instagram.com/aurora_code_factory/\"\n                target=\"_blank\"\n                ><img\n                  className=\"logo-instagram\"\n                  target=\"_blank\"\n                  src=\"/images/icons/instagram.svg\"\n                  alt=\"Instagram\"\n                />Instagram</a\n              >\n            </li> --> */}\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"footer-top__empty-column\"></div>\n        </div>\n\n        <div className=\"footer-bottom\">\n          <div className=\"footer-bottom__column\">\n            Copyright © 2023. Aurora Code. All rights reserved.\n          </div>\n          <div className=\"footer-bottom__column\">\n            {/* <!-- <span><a href=\"\">Terms & Conditions</a></span>\n    <span><a href=\"\">Privacy Policy</a></span> --> */}\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n};\n","import React from \"react\";\n\nexport const Hero = () => {\n  return (\n    <section id=\"clients\" className=\"unlock top-block\">\n      <div className=\"unlock__container\">\n        <div className=\"unlock__row\">\n          <div className=\"unlock__col-img\">\n            <div className=\"image-wrapper\">\n              <img src=\"images/section-1/chart.svg\" alt=\"chart\" />\n              <div className=\"loc-1\">\n                <div className=\"loc-1-1\"></div>\n                <img\n                  src=\"images/section-1/col-1.png\"\n                  className=\"col-1\"\n                  alt=\"column\"\n                />\n              </div>\n\n              <div className=\"loc-2\">\n                <div className=\"loc-2-2\"></div>\n                <img\n                  src=\"images/section-1/col-2.png\"\n                  className=\"col-2\"\n                  alt=\"column\"\n                />\n              </div>\n\n              <div className=\"loc-3\">\n                <div className=\"loc-3-3\"></div>\n                <img\n                  src=\"images/section-1/col-3.png\"\n                  className=\"col-3\"\n                  alt=\"column\"\n                />\n              </div>\n\n              <div className=\"loc-4\">\n                <div className=\"loc-4-4\"></div>\n                <img\n                  src=\"images/section-1/col-1.png\"\n                  className=\"col-4\"\n                  alt=\"column\"\n                />\n              </div>\n\n              <div className=\"loc-5\">\n                <div className=\"loc-5-5\"></div>\n                <img\n                  src=\"images/section-1/col-2.png\"\n                  className=\"col-5\"\n                  alt=\"column\"\n                />\n              </div>\n\n              <div className=\"loc-6\">\n                <div className=\"loc-6-6\"></div>\n                <img\n                  src=\"images/section-1/col-3.png\"\n                  className=\"col-6\"\n                  alt=\"column\"\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"unlock__col-content\">\n            <div className=\"anim-wrapper1\">\n              <h1 className=\"unlock__title\">\n                Unleash Your\n                <span>\n                  Business\n                  <img src=\"images/section-1/spacex.png\" alt=\"Rocket\" />\n                </span>\n                Potential\n              </h1>\n            </div>\n\n            <div className=\"unlock__text anim-2\">\n              Our tailored software solutions can help you bring your business\n              to the <b>next level</b>\n            </div>\n            <a href=\"/contact\" className=\"button\">\n              <span>Let’s Talk</span>\n            </a>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n","import { graphql, useStaticQuery } from \"gatsby\";\n\ninterface Post {\n  id: string;\n  title: string;\n  thumbnail: string;\n  description: string;\n  link: string;\n}\n\nexport const useArticles = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allArticle {\n        nodes {\n          id\n          title\n          thumbnail\n          description\n          link\n        }\n      }\n    }\n  `);\n\n  return data.allArticle.nodes as Post[];\n};\n","import React from \"react\";\nimport { useArticles } from \"../hooks/useArticles\";\nimport { ScrollWatch } from \"./ScrollWatch\";\n\nexport const BlogSection = () => {\n  const blogPosts = useArticles();\n\n  return (\n    <section id=\"blog\" className=\"blog\">\n      <div className=\"blog__container\">\n        <ScrollWatch\n          as=\"div\"\n          threshold=\"0.5\"\n          className=\"blog__row anim-upwards1\"\n        >\n          <div className=\"blog__col-text\">\n            <h2 className=\"blog__title\">From the Blog</h2>\n            <div className=\"blog__description\">\n              Catch up on the team's latest musings in our blog\n            </div>\n          </div>\n          <div className=\"blog__col-btn\">\n            <a\n              href=\"https://blog.auroracode.io\"\n              target=\"_blank\"\n              className=\"button\"\n            >\n              <span>Read All</span>\n            </a>\n          </div>\n        </ScrollWatch>\n\n        <div className=\"blog__cards cards\">\n          {blogPosts.slice(0, 3).map((post) => {\n            return (\n              <div className=\"blog__card card\" key={post.id}>\n                <a href={post.link} target=\"_blank\" className=\"card__image\">\n                  <img src={post.thumbnail} alt={post.title} />\n                </a>\n                <h4 className=\"card__title\">{post.title}</h4>\n                <div className=\"card__text\">{post.description}</div>\n                <a href={post.link} target=\"_blank\" className=\"card__bottom\">\n                  <span>learn more</span>\n                  <div className=\"card__link-button\"></div>\n                </a>\n              </div>\n            );\n          })}\n\n          {/* <div className=\"blog__card card\">\n            <a\n              href=\"https://blog.auroracode.io/no-code-waitlist-for-your-next-big-idea-and-why-its-important-311e645b96df\"\n              target=\"_blank\"\n              className=\"card__image\"\n            >\n              <img\n                src=\"https://miro.medium.com/max/1400/1*y7PWBHhxMbGqI5ZoxG0DEg.webp\"\n                alt=\"image\"\n              />\n            </a>\n            <h4 className=\"card__title\">\n              No-code waitlist for your next big idea, and why it’s important\n            </h4>\n            <div className=\"card__text\">\n              A guide on creating a waitlist, promoting it, collecting &\n              managing emails & validating product idea.\n            </div>\n            <a\n              href=\"https://blog.auroracode.io/no-code-waitlist-for-your-next-big-idea-and-why-its-important-311e645b96df\"\n              target=\"_blank\"\n              className=\"card__bottom\"\n            >\n              <span>learn more</span>\n              <div className=\"card__link-button\"></div>\n            </a>\n          </div>\n\n          <div className=\"blog__card card\">\n            <a\n              href=\"https://blog.auroracode.io/web-development-trends-startups-should-follow-in-2023-937f8896572b\"\n              target=\"_blank\"\n              className=\"card__image\"\n            >\n              <img src=\"images/blog/web-trends.png\" alt=\"image\" />\n            </a>\n            <h4 className=\"card__title\">\n              Web Development Trends Startups Should Follow in 2023\n            </h4>\n            <div className=\"card__text\">\n              2023 web development trends for startups: Shine the spotlight on\n              the latest industry trends!\n            </div>\n            <a\n              href=\"https://blog.auroracode.io/web-development-trends-startups-should-follow-in-2023-937f8896572b\"\n              className=\"card__bottom\"\n              target=\"_blank\"\n            >\n              <span>learn more</span>\n              <div className=\"card__link-button\"></div>\n            </a>\n          </div> */}\n        </div>\n      </div>\n    </section>\n  );\n};\n","import React from 'react';\n\nvar isCheckBoxInput = (element) => element.type === 'checkbox';\n\nvar isDateObject = (value) => value instanceof Date;\n\nvar isNullOrUndefined = (value) => value == null;\n\nconst isObjectType = (value) => typeof value === 'object';\r\nvar isObject = (value) => !isNullOrUndefined(value) &&\r\n    !Array.isArray(value) &&\r\n    isObjectType(value) &&\r\n    !isDateObject(value);\n\nvar getEventValue = (event) => isObject(event) && event.target\r\n    ? isCheckBoxInput(event.target)\r\n        ? event.target.checked\r\n        : event.target.value\r\n    : event;\n\nvar getNodeParentName = (name) => name.substring(0, name.search(/\\.\\d+(\\.|$)/)) || name;\n\nvar isNameInFieldArray = (names, name) => names.has(getNodeParentName(name));\n\nvar compact = (value) => Array.isArray(value) ? value.filter(Boolean) : [];\n\nvar isUndefined = (val) => val === undefined;\n\nvar get = (obj, path, defaultValue) => {\r\n    if (!path || !isObject(obj)) {\r\n        return defaultValue;\r\n    }\r\n    const result = compact(path.split(/[,[\\].]+?/)).reduce((result, key) => isNullOrUndefined(result) ? result : result[key], obj);\r\n    return isUndefined(result) || result === obj\r\n        ? isUndefined(obj[path])\r\n            ? defaultValue\r\n            : obj[path]\r\n        : result;\r\n};\n\nconst EVENTS = {\r\n    BLUR: 'blur',\r\n    FOCUS_OUT: 'focusout',\r\n    CHANGE: 'change',\r\n};\r\nconst VALIDATION_MODE = {\r\n    onBlur: 'onBlur',\r\n    onChange: 'onChange',\r\n    onSubmit: 'onSubmit',\r\n    onTouched: 'onTouched',\r\n    all: 'all',\r\n};\r\nconst INPUT_VALIDATION_RULES = {\r\n    max: 'max',\r\n    min: 'min',\r\n    maxLength: 'maxLength',\r\n    minLength: 'minLength',\r\n    pattern: 'pattern',\r\n    required: 'required',\r\n    validate: 'validate',\r\n};\n\nconst HookFormContext = React.createContext(null);\r\n/**\r\n * This custom hook allows you to access the form context. useFormContext is intended to be used in deeply nested structures, where it would become inconvenient to pass the context as a prop. To be used with {@link FormProvider}.\r\n *\r\n * @remarks\r\n * [API](https://react-hook-form.com/api/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\r\n *\r\n * @returns return all useForm methods\r\n *\r\n * @example\r\n * ```tsx\r\n * function App() {\r\n *   const methods = useForm();\r\n *   const onSubmit = data => console.log(data);\r\n *\r\n *   return (\r\n *     <FormProvider {...methods} >\r\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\r\n *         <NestedInput />\r\n *         <input type=\"submit\" />\r\n *       </form>\r\n *     </FormProvider>\r\n *   );\r\n * }\r\n *\r\n *  function NestedInput() {\r\n *   const { register } = useFormContext(); // retrieve all hook methods\r\n *   return <input {...register(\"test\")} />;\r\n * }\r\n * ```\r\n */\r\nconst useFormContext = () => React.useContext(HookFormContext);\r\n/**\r\n * A provider component that propagates the `useForm` methods to all children components via [React Context](https://reactjs.org/docs/context.html) API. To be used with {@link useFormContext}.\r\n *\r\n * @remarks\r\n * [API](https://react-hook-form.com/api/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\r\n *\r\n * @param props - all useFrom methods\r\n *\r\n * @example\r\n * ```tsx\r\n * function App() {\r\n *   const methods = useForm();\r\n *   const onSubmit = data => console.log(data);\r\n *\r\n *   return (\r\n *     <FormProvider {...methods} >\r\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\r\n *         <NestedInput />\r\n *         <input type=\"submit\" />\r\n *       </form>\r\n *     </FormProvider>\r\n *   );\r\n * }\r\n *\r\n *  function NestedInput() {\r\n *   const { register } = useFormContext(); // retrieve all hook methods\r\n *   return <input {...register(\"test\")} />;\r\n * }\r\n * ```\r\n */\r\nconst FormProvider = (props) => {\r\n    const { children, ...data } = props;\r\n    return (React.createElement(HookFormContext.Provider, { value: data }, children));\r\n};\n\nvar getProxyFormState = (formState, control, localProxyFormState, isRoot = true) => {\r\n    const result = {\r\n        defaultValues: control._defaultValues,\r\n    };\r\n    for (const key in formState) {\r\n        Object.defineProperty(result, key, {\r\n            get: () => {\r\n                const _key = key;\r\n                if (control._proxyFormState[_key] !== VALIDATION_MODE.all) {\r\n                    control._proxyFormState[_key] = !isRoot || VALIDATION_MODE.all;\r\n                }\r\n                localProxyFormState && (localProxyFormState[_key] = true);\r\n                return formState[_key];\r\n            },\r\n        });\r\n    }\r\n    return result;\r\n};\n\nvar isEmptyObject = (value) => isObject(value) && !Object.keys(value).length;\n\nvar shouldRenderFormState = (formStateData, _proxyFormState, updateFormState, isRoot) => {\r\n    updateFormState(formStateData);\r\n    const { name, ...formState } = formStateData;\r\n    return (isEmptyObject(formState) ||\r\n        Object.keys(formState).length >= Object.keys(_proxyFormState).length ||\r\n        Object.keys(formState).find((key) => _proxyFormState[key] ===\r\n            (!isRoot || VALIDATION_MODE.all)));\r\n};\n\nvar convertToArrayPayload = (value) => (Array.isArray(value) ? value : [value]);\n\nvar shouldSubscribeByName = (name, signalName, exact) => exact && signalName\r\n    ? name === signalName\r\n    : !name ||\r\n        !signalName ||\r\n        name === signalName ||\r\n        convertToArrayPayload(name).some((currentName) => currentName &&\r\n            (currentName.startsWith(signalName) ||\r\n                signalName.startsWith(currentName)));\n\nfunction useSubscribe(props) {\r\n    const _props = React.useRef(props);\r\n    _props.current = props;\r\n    React.useEffect(() => {\r\n        const subscription = !props.disabled &&\r\n            _props.current.subject.subscribe({\r\n                next: _props.current.next,\r\n            });\r\n        return () => {\r\n            subscription && subscription.unsubscribe();\r\n        };\r\n    }, [props.disabled]);\r\n}\n\n/**\r\n * This custom hook allows you to subscribe to each form state, and isolate the re-render at the custom hook level. It has its scope in terms of form state subscription, so it would not affect other useFormState and useForm. Using this hook can reduce the re-render impact on large and complex form application.\r\n *\r\n * @remarks\r\n * [API](https://react-hook-form.com/api/useformstate) • [Demo](https://codesandbox.io/s/useformstate-75xly)\r\n *\r\n * @param props - include options on specify fields to subscribe. {@link UseFormStateReturn}\r\n *\r\n * @example\r\n * ```tsx\r\n * function App() {\r\n *   const { register, handleSubmit, control } = useForm({\r\n *     defaultValues: {\r\n *     firstName: \"firstName\"\r\n *   }});\r\n *   const { dirtyFields } = useFormState({\r\n *     control\r\n *   });\r\n *   const onSubmit = (data) => console.log(data);\r\n *\r\n *   return (\r\n *     <form onSubmit={handleSubmit(onSubmit)}>\r\n *       <input {...register(\"firstName\")} placeholder=\"First Name\" />\r\n *       {dirtyFields.firstName && <p>Field is dirty.</p>}\r\n *       <input type=\"submit\" />\r\n *     </form>\r\n *   );\r\n * }\r\n * ```\r\n */\r\nfunction useFormState(props) {\r\n    const methods = useFormContext();\r\n    const { control = methods.control, disabled, name, exact } = props || {};\r\n    const [formState, updateFormState] = React.useState(control._formState);\r\n    const _mounted = React.useRef(true);\r\n    const _localProxyFormState = React.useRef({\r\n        isDirty: false,\r\n        isLoading: false,\r\n        dirtyFields: false,\r\n        touchedFields: false,\r\n        isValidating: false,\r\n        isValid: false,\r\n        errors: false,\r\n    });\r\n    const _name = React.useRef(name);\r\n    _name.current = name;\r\n    useSubscribe({\r\n        disabled,\r\n        next: (value) => _mounted.current &&\r\n            shouldSubscribeByName(_name.current, value.name, exact) &&\r\n            shouldRenderFormState(value, _localProxyFormState.current, control._updateFormState) &&\r\n            updateFormState({\r\n                ...control._formState,\r\n                ...value,\r\n            }),\r\n        subject: control._subjects.state,\r\n    });\r\n    React.useEffect(() => {\r\n        _mounted.current = true;\r\n        const isDirty = control._proxyFormState.isDirty && control._getDirty();\r\n        if (isDirty !== control._formState.isDirty) {\r\n            control._subjects.state.next({\r\n                isDirty,\r\n            });\r\n        }\r\n        _localProxyFormState.current.isValid && control._updateValid(true);\r\n        return () => {\r\n            _mounted.current = false;\r\n        };\r\n    }, [control]);\r\n    return getProxyFormState(formState, control, _localProxyFormState.current, false);\r\n}\n\nvar isString = (value) => typeof value === 'string';\n\nvar generateWatchOutput = (names, _names, formValues, isGlobal, defaultValue) => {\r\n    if (isString(names)) {\r\n        isGlobal && _names.watch.add(names);\r\n        return get(formValues, names, defaultValue);\r\n    }\r\n    if (Array.isArray(names)) {\r\n        return names.map((fieldName) => (isGlobal && _names.watch.add(fieldName), get(formValues, fieldName)));\r\n    }\r\n    isGlobal && (_names.watchAll = true);\r\n    return formValues;\r\n};\n\nvar isPlainObject = (tempObject) => {\r\n    const prototypeCopy = tempObject.constructor && tempObject.constructor.prototype;\r\n    return (isObject(prototypeCopy) && prototypeCopy.hasOwnProperty('isPrototypeOf'));\r\n};\n\nvar isWeb = typeof window !== 'undefined' &&\r\n    typeof window.HTMLElement !== 'undefined' &&\r\n    typeof document !== 'undefined';\n\nfunction cloneObject(data) {\r\n    let copy;\r\n    const isArray = Array.isArray(data);\r\n    if (data instanceof Date) {\r\n        copy = new Date(data);\r\n    }\r\n    else if (data instanceof Set) {\r\n        copy = new Set(data);\r\n    }\r\n    else if (!(isWeb && (data instanceof Blob || data instanceof FileList)) &&\r\n        (isArray || isObject(data))) {\r\n        copy = isArray ? [] : {};\r\n        if (!Array.isArray(data) && !isPlainObject(data)) {\r\n            copy = data;\r\n        }\r\n        else {\r\n            for (const key in data) {\r\n                copy[key] = cloneObject(data[key]);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        return data;\r\n    }\r\n    return copy;\r\n}\n\n/**\r\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\r\n *\r\n * @remarks\r\n *\r\n * [API](https://react-hook-form.com/api/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\r\n *\r\n * @example\r\n * ```tsx\r\n * const { watch } = useForm();\r\n * const values = useWatch({\r\n *   name: \"fieldName\"\r\n *   control,\r\n * })\r\n * ```\r\n */\r\nfunction useWatch(props) {\r\n    const methods = useFormContext();\r\n    const { control = methods.control, name, defaultValue, disabled, exact, } = props || {};\r\n    const _name = React.useRef(name);\r\n    _name.current = name;\r\n    useSubscribe({\r\n        disabled,\r\n        subject: control._subjects.watch,\r\n        next: (formState) => {\r\n            if (shouldSubscribeByName(_name.current, formState.name, exact)) {\r\n                updateValue(cloneObject(generateWatchOutput(_name.current, control._names, formState.values || control._formValues, false, defaultValue)));\r\n            }\r\n        },\r\n    });\r\n    const [value, updateValue] = React.useState(control._getWatch(name, defaultValue));\r\n    React.useEffect(() => control._removeUnmounted());\r\n    return value;\r\n}\n\n/**\r\n * Custom hook to work with controlled component, this function provide you with both form and field level state. Re-render is isolated at the hook level.\r\n *\r\n * @remarks\r\n * [API](https://react-hook-form.com/api/usecontroller) • [Demo](https://codesandbox.io/s/usecontroller-0o8px)\r\n *\r\n * @param props - the path name to the form field value, and validation rules.\r\n *\r\n * @returns field properties, field and form state. {@link UseControllerReturn}\r\n *\r\n * @example\r\n * ```tsx\r\n * function Input(props) {\r\n *   const { field, fieldState, formState } = useController(props);\r\n *   return (\r\n *     <div>\r\n *       <input {...field} placeholder={props.name} />\r\n *       <p>{fieldState.isTouched && \"Touched\"}</p>\r\n *       <p>{formState.isSubmitted ? \"submitted\" : \"\"}</p>\r\n *     </div>\r\n *   );\r\n * }\r\n * ```\r\n */\r\nfunction useController(props) {\r\n    const methods = useFormContext();\r\n    const { name, control = methods.control, shouldUnregister } = props;\r\n    const isArrayField = isNameInFieldArray(control._names.array, name);\r\n    const value = useWatch({\r\n        control,\r\n        name,\r\n        defaultValue: get(control._formValues, name, get(control._defaultValues, name, props.defaultValue)),\r\n        exact: true,\r\n    });\r\n    const formState = useFormState({\r\n        control,\r\n        name,\r\n    });\r\n    const _registerProps = React.useRef(control.register(name, {\r\n        ...props.rules,\r\n        value,\r\n    }));\r\n    React.useEffect(() => {\r\n        const updateMounted = (name, value) => {\r\n            const field = get(control._fields, name);\r\n            if (field) {\r\n                field._f.mount = value;\r\n            }\r\n        };\r\n        updateMounted(name, true);\r\n        return () => {\r\n            const _shouldUnregisterField = control._options.shouldUnregister || shouldUnregister;\r\n            (isArrayField\r\n                ? _shouldUnregisterField && !control._stateFlags.action\r\n                : _shouldUnregisterField)\r\n                ? control.unregister(name)\r\n                : updateMounted(name, false);\r\n        };\r\n    }, [name, control, isArrayField, shouldUnregister]);\r\n    return {\r\n        field: {\r\n            name,\r\n            value,\r\n            onChange: React.useCallback((event) => _registerProps.current.onChange({\r\n                target: {\r\n                    value: getEventValue(event),\r\n                    name: name,\r\n                },\r\n                type: EVENTS.CHANGE,\r\n            }), [name]),\r\n            onBlur: React.useCallback(() => _registerProps.current.onBlur({\r\n                target: {\r\n                    value: get(control._formValues, name),\r\n                    name: name,\r\n                },\r\n                type: EVENTS.BLUR,\r\n            }), [name, control]),\r\n            ref: (elm) => {\r\n                const field = get(control._fields, name);\r\n                if (field && elm) {\r\n                    field._f.ref = {\r\n                        focus: () => elm.focus(),\r\n                        select: () => elm.select(),\r\n                        setCustomValidity: (message) => elm.setCustomValidity(message),\r\n                        reportValidity: () => elm.reportValidity(),\r\n                    };\r\n                }\r\n            },\r\n        },\r\n        formState,\r\n        fieldState: Object.defineProperties({}, {\r\n            invalid: {\r\n                enumerable: true,\r\n                get: () => !!get(formState.errors, name),\r\n            },\r\n            isDirty: {\r\n                enumerable: true,\r\n                get: () => !!get(formState.dirtyFields, name),\r\n            },\r\n            isTouched: {\r\n                enumerable: true,\r\n                get: () => !!get(formState.touchedFields, name),\r\n            },\r\n            error: {\r\n                enumerable: true,\r\n                get: () => get(formState.errors, name),\r\n            },\r\n        }),\r\n    };\r\n}\n\n/**\r\n * Component based on `useController` hook to work with controlled component.\r\n *\r\n * @remarks\r\n * [API](https://react-hook-form.com/api/usecontroller/controller) • [Demo](https://codesandbox.io/s/react-hook-form-v6-controller-ts-jwyzw) • [Video](https://www.youtube.com/watch?v=N2UNk_UCVyA)\r\n *\r\n * @param props - the path name to the form field value, and validation rules.\r\n *\r\n * @returns provide field handler functions, field and form state.\r\n *\r\n * @example\r\n * ```tsx\r\n * function App() {\r\n *   const { control } = useForm<FormValues>({\r\n *     defaultValues: {\r\n *       test: \"\"\r\n *     }\r\n *   });\r\n *\r\n *   return (\r\n *     <form>\r\n *       <Controller\r\n *         control={control}\r\n *         name=\"test\"\r\n *         render={({ field: { onChange, onBlur, value, ref }, formState, fieldState }) => (\r\n *           <>\r\n *             <input\r\n *               onChange={onChange} // send value to hook form\r\n *               onBlur={onBlur} // notify when input is touched\r\n *               value={value} // return updated value\r\n *               ref={ref} // set ref for focus management\r\n *             />\r\n *             <p>{formState.isSubmitted ? \"submitted\" : \"\"}</p>\r\n *             <p>{fieldState.isTouched ? \"touched\" : \"\"}</p>\r\n *           </>\r\n *         )}\r\n *       />\r\n *     </form>\r\n *   );\r\n * }\r\n * ```\r\n */\r\nconst Controller = (props) => props.render(useController(props));\n\nvar appendErrors = (name, validateAllFieldCriteria, errors, type, message) => validateAllFieldCriteria\r\n    ? {\r\n        ...errors[name],\r\n        types: {\r\n            ...(errors[name] && errors[name].types ? errors[name].types : {}),\r\n            [type]: message || true,\r\n        },\r\n    }\r\n    : {};\n\nvar isKey = (value) => /^\\w*$/.test(value);\n\nvar stringToPath = (input) => compact(input.replace(/[\"|']|\\]/g, '').split(/\\.|\\[/));\n\nfunction set(object, path, value) {\r\n    let index = -1;\r\n    const tempPath = isKey(path) ? [path] : stringToPath(path);\r\n    const length = tempPath.length;\r\n    const lastIndex = length - 1;\r\n    while (++index < length) {\r\n        const key = tempPath[index];\r\n        let newValue = value;\r\n        if (index !== lastIndex) {\r\n            const objValue = object[key];\r\n            newValue =\r\n                isObject(objValue) || Array.isArray(objValue)\r\n                    ? objValue\r\n                    : !isNaN(+tempPath[index + 1])\r\n                        ? []\r\n                        : {};\r\n        }\r\n        object[key] = newValue;\r\n        object = object[key];\r\n    }\r\n    return object;\r\n}\n\nconst focusFieldBy = (fields, callback, fieldsNames) => {\r\n    for (const key of fieldsNames || Object.keys(fields)) {\r\n        const field = get(fields, key);\r\n        if (field) {\r\n            const { _f, ...currentField } = field;\r\n            if (_f && callback(_f.name)) {\r\n                if (_f.ref.focus) {\r\n                    _f.ref.focus();\r\n                    break;\r\n                }\r\n                else if (_f.refs && _f.refs[0].focus) {\r\n                    _f.refs[0].focus();\r\n                    break;\r\n                }\r\n            }\r\n            else if (isObject(currentField)) {\r\n                focusFieldBy(currentField, callback);\r\n            }\r\n        }\r\n    }\r\n};\n\nvar generateId = () => {\r\n    const d = typeof performance === 'undefined' ? Date.now() : performance.now() * 1000;\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\r\n        const r = (Math.random() * 16 + d) % 16 | 0;\r\n        return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\r\n    });\r\n};\n\nvar getFocusFieldName = (name, index, options = {}) => options.shouldFocus || isUndefined(options.shouldFocus)\r\n    ? options.focusName ||\r\n        `${name}.${isUndefined(options.focusIndex) ? index : options.focusIndex}.`\r\n    : '';\n\nvar getValidationModes = (mode) => ({\r\n    isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\r\n    isOnBlur: mode === VALIDATION_MODE.onBlur,\r\n    isOnChange: mode === VALIDATION_MODE.onChange,\r\n    isOnAll: mode === VALIDATION_MODE.all,\r\n    isOnTouch: mode === VALIDATION_MODE.onTouched,\r\n});\n\nvar isWatched = (name, _names, isBlurEvent) => !isBlurEvent &&\r\n    (_names.watchAll ||\r\n        _names.watch.has(name) ||\r\n        [..._names.watch].some((watchName) => name.startsWith(watchName) &&\r\n            /^\\.\\w+/.test(name.slice(watchName.length))));\n\nvar updateFieldArrayRootError = (errors, error, name) => {\r\n    const fieldArrayErrors = compact(get(errors, name));\r\n    set(fieldArrayErrors, 'root', error[name]);\r\n    set(errors, name, fieldArrayErrors);\r\n    return errors;\r\n};\n\nvar isBoolean = (value) => typeof value === 'boolean';\n\nvar isFileInput = (element) => element.type === 'file';\n\nvar isFunction = (value) => typeof value === 'function';\n\nvar isHTMLElement = (value) => {\r\n    if (!isWeb) {\r\n        return false;\r\n    }\r\n    const owner = value ? value.ownerDocument : 0;\r\n    return (value instanceof\r\n        (owner && owner.defaultView ? owner.defaultView.HTMLElement : HTMLElement));\r\n};\n\nvar isMessage = (value) => isString(value) || React.isValidElement(value);\n\nvar isRadioInput = (element) => element.type === 'radio';\n\nvar isRegex = (value) => value instanceof RegExp;\n\nconst defaultResult = {\r\n    value: false,\r\n    isValid: false,\r\n};\r\nconst validResult = { value: true, isValid: true };\r\nvar getCheckboxValue = (options) => {\r\n    if (Array.isArray(options)) {\r\n        if (options.length > 1) {\r\n            const values = options\r\n                .filter((option) => option && option.checked && !option.disabled)\r\n                .map((option) => option.value);\r\n            return { value: values, isValid: !!values.length };\r\n        }\r\n        return options[0].checked && !options[0].disabled\r\n            ? // @ts-expect-error expected to work in the browser\r\n                options[0].attributes && !isUndefined(options[0].attributes.value)\r\n                    ? isUndefined(options[0].value) || options[0].value === ''\r\n                        ? validResult\r\n                        : { value: options[0].value, isValid: true }\r\n                    : validResult\r\n            : defaultResult;\r\n    }\r\n    return defaultResult;\r\n};\n\nconst defaultReturn = {\r\n    isValid: false,\r\n    value: null,\r\n};\r\nvar getRadioValue = (options) => Array.isArray(options)\r\n    ? options.reduce((previous, option) => option && option.checked && !option.disabled\r\n        ? {\r\n            isValid: true,\r\n            value: option.value,\r\n        }\r\n        : previous, defaultReturn)\r\n    : defaultReturn;\n\nfunction getValidateError(result, ref, type = 'validate') {\r\n    if (isMessage(result) ||\r\n        (Array.isArray(result) && result.every(isMessage)) ||\r\n        (isBoolean(result) && !result)) {\r\n        return {\r\n            type,\r\n            message: isMessage(result) ? result : '',\r\n            ref,\r\n        };\r\n    }\r\n}\n\nvar getValueAndMessage = (validationData) => isObject(validationData) && !isRegex(validationData)\r\n    ? validationData\r\n    : {\r\n        value: validationData,\r\n        message: '',\r\n    };\n\nvar validateField = async (field, formValues, validateAllFieldCriteria, shouldUseNativeValidation, isFieldArray) => {\r\n    const { ref, refs, required, maxLength, minLength, min, max, pattern, validate, name, valueAsNumber, mount, disabled, } = field._f;\r\n    const inputValue = get(formValues, name);\r\n    if (!mount || disabled) {\r\n        return {};\r\n    }\r\n    const inputRef = refs ? refs[0] : ref;\r\n    const setCustomValidity = (message) => {\r\n        if (shouldUseNativeValidation && inputRef.reportValidity) {\r\n            inputRef.setCustomValidity(isBoolean(message) ? '' : message || '');\r\n            inputRef.reportValidity();\r\n        }\r\n    };\r\n    const error = {};\r\n    const isRadio = isRadioInput(ref);\r\n    const isCheckBox = isCheckBoxInput(ref);\r\n    const isRadioOrCheckbox = isRadio || isCheckBox;\r\n    const isEmpty = ((valueAsNumber || isFileInput(ref)) &&\r\n        isUndefined(ref.value) &&\r\n        isUndefined(inputValue)) ||\r\n        (isHTMLElement(ref) && ref.value === '') ||\r\n        inputValue === '' ||\r\n        (Array.isArray(inputValue) && !inputValue.length);\r\n    const appendErrorsCurry = appendErrors.bind(null, name, validateAllFieldCriteria, error);\r\n    const getMinMaxMessage = (exceedMax, maxLengthMessage, minLengthMessage, maxType = INPUT_VALIDATION_RULES.maxLength, minType = INPUT_VALIDATION_RULES.minLength) => {\r\n        const message = exceedMax ? maxLengthMessage : minLengthMessage;\r\n        error[name] = {\r\n            type: exceedMax ? maxType : minType,\r\n            message,\r\n            ref,\r\n            ...appendErrorsCurry(exceedMax ? maxType : minType, message),\r\n        };\r\n    };\r\n    if (isFieldArray\r\n        ? !Array.isArray(inputValue) || !inputValue.length\r\n        : required &&\r\n            ((!isRadioOrCheckbox && (isEmpty || isNullOrUndefined(inputValue))) ||\r\n                (isBoolean(inputValue) && !inputValue) ||\r\n                (isCheckBox && !getCheckboxValue(refs).isValid) ||\r\n                (isRadio && !getRadioValue(refs).isValid))) {\r\n        const { value, message } = isMessage(required)\r\n            ? { value: !!required, message: required }\r\n            : getValueAndMessage(required);\r\n        if (value) {\r\n            error[name] = {\r\n                type: INPUT_VALIDATION_RULES.required,\r\n                message,\r\n                ref: inputRef,\r\n                ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, message),\r\n            };\r\n            if (!validateAllFieldCriteria) {\r\n                setCustomValidity(message);\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n    if (!isEmpty && (!isNullOrUndefined(min) || !isNullOrUndefined(max))) {\r\n        let exceedMax;\r\n        let exceedMin;\r\n        const maxOutput = getValueAndMessage(max);\r\n        const minOutput = getValueAndMessage(min);\r\n        if (!isNullOrUndefined(inputValue) && !isNaN(inputValue)) {\r\n            const valueNumber = ref.valueAsNumber ||\r\n                (inputValue ? +inputValue : inputValue);\r\n            if (!isNullOrUndefined(maxOutput.value)) {\r\n                exceedMax = valueNumber > maxOutput.value;\r\n            }\r\n            if (!isNullOrUndefined(minOutput.value)) {\r\n                exceedMin = valueNumber < minOutput.value;\r\n            }\r\n        }\r\n        else {\r\n            const valueDate = ref.valueAsDate || new Date(inputValue);\r\n            const convertTimeToDate = (time) => new Date(new Date().toDateString() + ' ' + time);\r\n            const isTime = ref.type == 'time';\r\n            const isWeek = ref.type == 'week';\r\n            if (isString(maxOutput.value) && inputValue) {\r\n                exceedMax = isTime\r\n                    ? convertTimeToDate(inputValue) > convertTimeToDate(maxOutput.value)\r\n                    : isWeek\r\n                        ? inputValue > maxOutput.value\r\n                        : valueDate > new Date(maxOutput.value);\r\n            }\r\n            if (isString(minOutput.value) && inputValue) {\r\n                exceedMin = isTime\r\n                    ? convertTimeToDate(inputValue) < convertTimeToDate(minOutput.value)\r\n                    : isWeek\r\n                        ? inputValue < minOutput.value\r\n                        : valueDate < new Date(minOutput.value);\r\n            }\r\n        }\r\n        if (exceedMax || exceedMin) {\r\n            getMinMaxMessage(!!exceedMax, maxOutput.message, minOutput.message, INPUT_VALIDATION_RULES.max, INPUT_VALIDATION_RULES.min);\r\n            if (!validateAllFieldCriteria) {\r\n                setCustomValidity(error[name].message);\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n    if ((maxLength || minLength) &&\r\n        !isEmpty &&\r\n        (isString(inputValue) || (isFieldArray && Array.isArray(inputValue)))) {\r\n        const maxLengthOutput = getValueAndMessage(maxLength);\r\n        const minLengthOutput = getValueAndMessage(minLength);\r\n        const exceedMax = !isNullOrUndefined(maxLengthOutput.value) &&\r\n            inputValue.length > maxLengthOutput.value;\r\n        const exceedMin = !isNullOrUndefined(minLengthOutput.value) &&\r\n            inputValue.length < minLengthOutput.value;\r\n        if (exceedMax || exceedMin) {\r\n            getMinMaxMessage(exceedMax, maxLengthOutput.message, minLengthOutput.message);\r\n            if (!validateAllFieldCriteria) {\r\n                setCustomValidity(error[name].message);\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n    if (pattern && !isEmpty && isString(inputValue)) {\r\n        const { value: patternValue, message } = getValueAndMessage(pattern);\r\n        if (isRegex(patternValue) && !inputValue.match(patternValue)) {\r\n            error[name] = {\r\n                type: INPUT_VALIDATION_RULES.pattern,\r\n                message,\r\n                ref,\r\n                ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message),\r\n            };\r\n            if (!validateAllFieldCriteria) {\r\n                setCustomValidity(message);\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n    if (validate) {\r\n        if (isFunction(validate)) {\r\n            const result = await validate(inputValue, formValues);\r\n            const validateError = getValidateError(result, inputRef);\r\n            if (validateError) {\r\n                error[name] = {\r\n                    ...validateError,\r\n                    ...appendErrorsCurry(INPUT_VALIDATION_RULES.validate, validateError.message),\r\n                };\r\n                if (!validateAllFieldCriteria) {\r\n                    setCustomValidity(validateError.message);\r\n                    return error;\r\n                }\r\n            }\r\n        }\r\n        else if (isObject(validate)) {\r\n            let validationResult = {};\r\n            for (const key in validate) {\r\n                if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\r\n                    break;\r\n                }\r\n                const validateError = getValidateError(await validate[key](inputValue, formValues), inputRef, key);\r\n                if (validateError) {\r\n                    validationResult = {\r\n                        ...validateError,\r\n                        ...appendErrorsCurry(key, validateError.message),\r\n                    };\r\n                    setCustomValidity(validateError.message);\r\n                    if (validateAllFieldCriteria) {\r\n                        error[name] = validationResult;\r\n                    }\r\n                }\r\n            }\r\n            if (!isEmptyObject(validationResult)) {\r\n                error[name] = {\r\n                    ref: inputRef,\r\n                    ...validationResult,\r\n                };\r\n                if (!validateAllFieldCriteria) {\r\n                    return error;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    setCustomValidity(true);\r\n    return error;\r\n};\n\nfunction append(data, value) {\r\n    return [...data, ...convertToArrayPayload(value)];\r\n}\n\nvar fillEmptyArray = (value) => Array.isArray(value) ? value.map(() => undefined) : undefined;\n\nfunction insert(data, index, value) {\r\n    return [\r\n        ...data.slice(0, index),\r\n        ...convertToArrayPayload(value),\r\n        ...data.slice(index),\r\n    ];\r\n}\n\nvar moveArrayAt = (data, from, to) => {\r\n    if (!Array.isArray(data)) {\r\n        return [];\r\n    }\r\n    if (isUndefined(data[to])) {\r\n        data[to] = undefined;\r\n    }\r\n    data.splice(to, 0, data.splice(from, 1)[0]);\r\n    return data;\r\n};\n\nfunction prepend(data, value) {\r\n    return [...convertToArrayPayload(value), ...convertToArrayPayload(data)];\r\n}\n\nfunction removeAtIndexes(data, indexes) {\r\n    let i = 0;\r\n    const temp = [...data];\r\n    for (const index of indexes) {\r\n        temp.splice(index - i, 1);\r\n        i++;\r\n    }\r\n    return compact(temp).length ? temp : [];\r\n}\r\nvar removeArrayAt = (data, index) => isUndefined(index)\r\n    ? []\r\n    : removeAtIndexes(data, convertToArrayPayload(index).sort((a, b) => a - b));\n\nvar swapArrayAt = (data, indexA, indexB) => {\r\n    data[indexA] = [data[indexB], (data[indexB] = data[indexA])][0];\r\n};\n\nfunction baseGet(object, updatePath) {\r\n    const length = updatePath.slice(0, -1).length;\r\n    let index = 0;\r\n    while (index < length) {\r\n        object = isUndefined(object) ? index++ : object[updatePath[index++]];\r\n    }\r\n    return object;\r\n}\r\nfunction isEmptyArray(obj) {\r\n    for (const key in obj) {\r\n        if (!isUndefined(obj[key])) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction unset(object, path) {\r\n    const paths = Array.isArray(path)\r\n        ? path\r\n        : isKey(path)\r\n            ? [path]\r\n            : stringToPath(path);\r\n    const childObject = paths.length === 1 ? object : baseGet(object, paths);\r\n    const index = paths.length - 1;\r\n    const key = paths[index];\r\n    if (childObject) {\r\n        delete childObject[key];\r\n    }\r\n    if (index !== 0 &&\r\n        ((isObject(childObject) && isEmptyObject(childObject)) ||\r\n            (Array.isArray(childObject) && isEmptyArray(childObject)))) {\r\n        unset(object, paths.slice(0, -1));\r\n    }\r\n    return object;\r\n}\n\nvar updateAt = (fieldValues, index, value) => {\r\n    fieldValues[index] = value;\r\n    return fieldValues;\r\n};\n\n/**\r\n * A custom hook that exposes convenient methods to perform operations with a list of dynamic inputs that need to be appended, updated, removed etc. • [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn) • [Video](https://youtu.be/4MrbfGSFY2A)\r\n *\r\n * @remarks\r\n * [API](https://react-hook-form.com/api/usefieldarray) • [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn)\r\n *\r\n * @param props - useFieldArray props\r\n *\r\n * @returns methods - functions to manipulate with the Field Arrays (dynamic inputs) {@link UseFieldArrayReturn}\r\n *\r\n * @example\r\n * ```tsx\r\n * function App() {\r\n *   const { register, control, handleSubmit, reset, trigger, setError } = useForm({\r\n *     defaultValues: {\r\n *       test: []\r\n *     }\r\n *   });\r\n *   const { fields, append } = useFieldArray({\r\n *     control,\r\n *     name: \"test\"\r\n *   });\r\n *\r\n *   return (\r\n *     <form onSubmit={handleSubmit(data => console.log(data))}>\r\n *       {fields.map((item, index) => (\r\n *          <input key={item.id} {...register(`test.${index}.firstName`)}  />\r\n *       ))}\r\n *       <button type=\"button\" onClick={() => append({ firstName: \"bill\" })}>\r\n *         append\r\n *       </button>\r\n *       <input type=\"submit\" />\r\n *     </form>\r\n *   );\r\n * }\r\n * ```\r\n */\r\nfunction useFieldArray(props) {\r\n    const methods = useFormContext();\r\n    const { control = methods.control, name, keyName = 'id', shouldUnregister, } = props;\r\n    const [fields, setFields] = React.useState(control._getFieldArray(name));\r\n    const ids = React.useRef(control._getFieldArray(name).map(generateId));\r\n    const _fieldIds = React.useRef(fields);\r\n    const _name = React.useRef(name);\r\n    const _actioned = React.useRef(false);\r\n    _name.current = name;\r\n    _fieldIds.current = fields;\r\n    control._names.array.add(name);\r\n    props.rules &&\r\n        control.register(name, props.rules);\r\n    useSubscribe({\r\n        next: ({ values, name: fieldArrayName, }) => {\r\n            if (fieldArrayName === _name.current || !fieldArrayName) {\r\n                const fieldValues = get(values, _name.current);\r\n                if (Array.isArray(fieldValues)) {\r\n                    setFields(fieldValues);\r\n                    ids.current = fieldValues.map(generateId);\r\n                }\r\n            }\r\n        },\r\n        subject: control._subjects.array,\r\n    });\r\n    const updateValues = React.useCallback((updatedFieldArrayValues) => {\r\n        _actioned.current = true;\r\n        control._updateFieldArray(name, updatedFieldArrayValues);\r\n    }, [control, name]);\r\n    const append$1 = (value, options) => {\r\n        const appendValue = convertToArrayPayload(cloneObject(value));\r\n        const updatedFieldArrayValues = append(control._getFieldArray(name), appendValue);\r\n        control._names.focus = getFocusFieldName(name, updatedFieldArrayValues.length - 1, options);\r\n        ids.current = append(ids.current, appendValue.map(generateId));\r\n        updateValues(updatedFieldArrayValues);\r\n        setFields(updatedFieldArrayValues);\r\n        control._updateFieldArray(name, updatedFieldArrayValues, append, {\r\n            argA: fillEmptyArray(value),\r\n        });\r\n    };\r\n    const prepend$1 = (value, options) => {\r\n        const prependValue = convertToArrayPayload(cloneObject(value));\r\n        const updatedFieldArrayValues = prepend(control._getFieldArray(name), prependValue);\r\n        control._names.focus = getFocusFieldName(name, 0, options);\r\n        ids.current = prepend(ids.current, prependValue.map(generateId));\r\n        updateValues(updatedFieldArrayValues);\r\n        setFields(updatedFieldArrayValues);\r\n        control._updateFieldArray(name, updatedFieldArrayValues, prepend, {\r\n            argA: fillEmptyArray(value),\r\n        });\r\n    };\r\n    const remove = (index) => {\r\n        const updatedFieldArrayValues = removeArrayAt(control._getFieldArray(name), index);\r\n        ids.current = removeArrayAt(ids.current, index);\r\n        updateValues(updatedFieldArrayValues);\r\n        setFields(updatedFieldArrayValues);\r\n        control._updateFieldArray(name, updatedFieldArrayValues, removeArrayAt, {\r\n            argA: index,\r\n        });\r\n    };\r\n    const insert$1 = (index, value, options) => {\r\n        const insertValue = convertToArrayPayload(cloneObject(value));\r\n        const updatedFieldArrayValues = insert(control._getFieldArray(name), index, insertValue);\r\n        control._names.focus = getFocusFieldName(name, index, options);\r\n        ids.current = insert(ids.current, index, insertValue.map(generateId));\r\n        updateValues(updatedFieldArrayValues);\r\n        setFields(updatedFieldArrayValues);\r\n        control._updateFieldArray(name, updatedFieldArrayValues, insert, {\r\n            argA: index,\r\n            argB: fillEmptyArray(value),\r\n        });\r\n    };\r\n    const swap = (indexA, indexB) => {\r\n        const updatedFieldArrayValues = control._getFieldArray(name);\r\n        swapArrayAt(updatedFieldArrayValues, indexA, indexB);\r\n        swapArrayAt(ids.current, indexA, indexB);\r\n        updateValues(updatedFieldArrayValues);\r\n        setFields(updatedFieldArrayValues);\r\n        control._updateFieldArray(name, updatedFieldArrayValues, swapArrayAt, {\r\n            argA: indexA,\r\n            argB: indexB,\r\n        }, false);\r\n    };\r\n    const move = (from, to) => {\r\n        const updatedFieldArrayValues = control._getFieldArray(name);\r\n        moveArrayAt(updatedFieldArrayValues, from, to);\r\n        moveArrayAt(ids.current, from, to);\r\n        updateValues(updatedFieldArrayValues);\r\n        setFields(updatedFieldArrayValues);\r\n        control._updateFieldArray(name, updatedFieldArrayValues, moveArrayAt, {\r\n            argA: from,\r\n            argB: to,\r\n        }, false);\r\n    };\r\n    const update = (index, value) => {\r\n        const updateValue = cloneObject(value);\r\n        const updatedFieldArrayValues = updateAt(control._getFieldArray(name), index, updateValue);\r\n        ids.current = [...updatedFieldArrayValues].map((item, i) => !item || i === index ? generateId() : ids.current[i]);\r\n        updateValues(updatedFieldArrayValues);\r\n        setFields([...updatedFieldArrayValues]);\r\n        control._updateFieldArray(name, updatedFieldArrayValues, updateAt, {\r\n            argA: index,\r\n            argB: updateValue,\r\n        }, true, false);\r\n    };\r\n    const replace = (value) => {\r\n        const updatedFieldArrayValues = convertToArrayPayload(cloneObject(value));\r\n        ids.current = updatedFieldArrayValues.map(generateId);\r\n        updateValues([...updatedFieldArrayValues]);\r\n        setFields([...updatedFieldArrayValues]);\r\n        control._updateFieldArray(name, [...updatedFieldArrayValues], (data) => data, {}, true, false);\r\n    };\r\n    React.useEffect(() => {\r\n        control._stateFlags.action = false;\r\n        isWatched(name, control._names) && control._subjects.state.next({});\r\n        if (_actioned.current &&\r\n            (!getValidationModes(control._options.mode).isOnSubmit ||\r\n                control._formState.isSubmitted)) {\r\n            if (control._options.resolver) {\r\n                control._executeSchema([name]).then((result) => {\r\n                    const error = get(result.errors, name);\r\n                    const existingError = get(control._formState.errors, name);\r\n                    if (existingError ? !error && existingError.type : error && error.type) {\r\n                        error\r\n                            ? set(control._formState.errors, name, error)\r\n                            : unset(control._formState.errors, name);\r\n                        control._subjects.state.next({\r\n                            errors: control._formState.errors,\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                const field = get(control._fields, name);\r\n                if (field && field._f) {\r\n                    validateField(field, control._formValues, control._options.criteriaMode === VALIDATION_MODE.all, control._options.shouldUseNativeValidation, true).then((error) => !isEmptyObject(error) &&\r\n                        control._subjects.state.next({\r\n                            errors: updateFieldArrayRootError(control._formState.errors, error, name),\r\n                        }));\r\n                }\r\n            }\r\n        }\r\n        control._subjects.watch.next({\r\n            name,\r\n            values: control._formValues,\r\n        });\r\n        control._names.focus &&\r\n            focusFieldBy(control._fields, (key) => !!key && key.startsWith(control._names.focus || ''));\r\n        control._names.focus = '';\r\n        control._updateValid();\r\n    }, [fields, name, control]);\r\n    React.useEffect(() => {\r\n        !get(control._formValues, name) && control._updateFieldArray(name);\r\n        return () => {\r\n            (control._options.shouldUnregister || shouldUnregister) &&\r\n                control.unregister(name);\r\n        };\r\n    }, [name, control, keyName, shouldUnregister]);\r\n    return {\r\n        swap: React.useCallback(swap, [updateValues, name, control]),\r\n        move: React.useCallback(move, [updateValues, name, control]),\r\n        prepend: React.useCallback(prepend$1, [updateValues, name, control]),\r\n        append: React.useCallback(append$1, [updateValues, name, control]),\r\n        remove: React.useCallback(remove, [updateValues, name, control]),\r\n        insert: React.useCallback(insert$1, [updateValues, name, control]),\r\n        update: React.useCallback(update, [updateValues, name, control]),\r\n        replace: React.useCallback(replace, [updateValues, name, control]),\r\n        fields: React.useMemo(() => fields.map((field, index) => ({\r\n            ...field,\r\n            [keyName]: ids.current[index] || generateId(),\r\n        })), [fields, keyName]),\r\n    };\r\n}\n\nfunction createSubject() {\r\n    let _observers = [];\r\n    const next = (value) => {\r\n        for (const observer of _observers) {\r\n            observer.next(value);\r\n        }\r\n    };\r\n    const subscribe = (observer) => {\r\n        _observers.push(observer);\r\n        return {\r\n            unsubscribe: () => {\r\n                _observers = _observers.filter((o) => o !== observer);\r\n            },\r\n        };\r\n    };\r\n    const unsubscribe = () => {\r\n        _observers = [];\r\n    };\r\n    return {\r\n        get observers() {\r\n            return _observers;\r\n        },\r\n        next,\r\n        subscribe,\r\n        unsubscribe,\r\n    };\r\n}\n\nvar isPrimitive = (value) => isNullOrUndefined(value) || !isObjectType(value);\n\nfunction deepEqual(object1, object2) {\r\n    if (isPrimitive(object1) || isPrimitive(object2)) {\r\n        return object1 === object2;\r\n    }\r\n    if (isDateObject(object1) && isDateObject(object2)) {\r\n        return object1.getTime() === object2.getTime();\r\n    }\r\n    const keys1 = Object.keys(object1);\r\n    const keys2 = Object.keys(object2);\r\n    if (keys1.length !== keys2.length) {\r\n        return false;\r\n    }\r\n    for (const key of keys1) {\r\n        const val1 = object1[key];\r\n        if (!keys2.includes(key)) {\r\n            return false;\r\n        }\r\n        if (key !== 'ref') {\r\n            const val2 = object2[key];\r\n            if ((isDateObject(val1) && isDateObject(val2)) ||\r\n                (isObject(val1) && isObject(val2)) ||\r\n                (Array.isArray(val1) && Array.isArray(val2))\r\n                ? !deepEqual(val1, val2)\r\n                : val1 !== val2) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\n\nvar isMultipleSelect = (element) => element.type === `select-multiple`;\n\nvar isRadioOrCheckbox = (ref) => isRadioInput(ref) || isCheckBoxInput(ref);\n\nvar live = (ref) => isHTMLElement(ref) && ref.isConnected;\n\nvar objectHasFunction = (data) => {\r\n    for (const key in data) {\r\n        if (isFunction(data[key])) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n};\n\nfunction markFieldsDirty(data, fields = {}) {\r\n    const isParentNodeArray = Array.isArray(data);\r\n    if (isObject(data) || isParentNodeArray) {\r\n        for (const key in data) {\r\n            if (Array.isArray(data[key]) ||\r\n                (isObject(data[key]) && !objectHasFunction(data[key]))) {\r\n                fields[key] = Array.isArray(data[key]) ? [] : {};\r\n                markFieldsDirty(data[key], fields[key]);\r\n            }\r\n            else if (!isNullOrUndefined(data[key])) {\r\n                fields[key] = true;\r\n            }\r\n        }\r\n    }\r\n    return fields;\r\n}\r\nfunction getDirtyFieldsFromDefaultValues(data, formValues, dirtyFieldsFromValues) {\r\n    const isParentNodeArray = Array.isArray(data);\r\n    if (isObject(data) || isParentNodeArray) {\r\n        for (const key in data) {\r\n            if (Array.isArray(data[key]) ||\r\n                (isObject(data[key]) && !objectHasFunction(data[key]))) {\r\n                if (isUndefined(formValues) ||\r\n                    isPrimitive(dirtyFieldsFromValues[key])) {\r\n                    dirtyFieldsFromValues[key] = Array.isArray(data[key])\r\n                        ? markFieldsDirty(data[key], [])\r\n                        : { ...markFieldsDirty(data[key]) };\r\n                }\r\n                else {\r\n                    getDirtyFieldsFromDefaultValues(data[key], isNullOrUndefined(formValues) ? {} : formValues[key], dirtyFieldsFromValues[key]);\r\n                }\r\n            }\r\n            else {\r\n                deepEqual(data[key], formValues[key])\r\n                    ? delete dirtyFieldsFromValues[key]\r\n                    : (dirtyFieldsFromValues[key] = true);\r\n            }\r\n        }\r\n    }\r\n    return dirtyFieldsFromValues;\r\n}\r\nvar getDirtyFields = (defaultValues, formValues) => getDirtyFieldsFromDefaultValues(defaultValues, formValues, markFieldsDirty(formValues));\n\nvar getFieldValueAs = (value, { valueAsNumber, valueAsDate, setValueAs }) => isUndefined(value)\r\n    ? value\r\n    : valueAsNumber\r\n        ? value === ''\r\n            ? NaN\r\n            : value\r\n                ? +value\r\n                : value\r\n        : valueAsDate && isString(value)\r\n            ? new Date(value)\r\n            : setValueAs\r\n                ? setValueAs(value)\r\n                : value;\n\nfunction getFieldValue(_f) {\r\n    const ref = _f.ref;\r\n    if (_f.refs ? _f.refs.every((ref) => ref.disabled) : ref.disabled) {\r\n        return;\r\n    }\r\n    if (isFileInput(ref)) {\r\n        return ref.files;\r\n    }\r\n    if (isRadioInput(ref)) {\r\n        return getRadioValue(_f.refs).value;\r\n    }\r\n    if (isMultipleSelect(ref)) {\r\n        return [...ref.selectedOptions].map(({ value }) => value);\r\n    }\r\n    if (isCheckBoxInput(ref)) {\r\n        return getCheckboxValue(_f.refs).value;\r\n    }\r\n    return getFieldValueAs(isUndefined(ref.value) ? _f.ref.value : ref.value, _f);\r\n}\n\nvar getResolverOptions = (fieldsNames, _fields, criteriaMode, shouldUseNativeValidation) => {\r\n    const fields = {};\r\n    for (const name of fieldsNames) {\r\n        const field = get(_fields, name);\r\n        field && set(fields, name, field._f);\r\n    }\r\n    return {\r\n        criteriaMode,\r\n        names: [...fieldsNames],\r\n        fields,\r\n        shouldUseNativeValidation,\r\n    };\r\n};\n\nvar getRuleValue = (rule) => isUndefined(rule)\r\n    ? rule\r\n    : isRegex(rule)\r\n        ? rule.source\r\n        : isObject(rule)\r\n            ? isRegex(rule.value)\r\n                ? rule.value.source\r\n                : rule.value\r\n            : rule;\n\nvar hasValidation = (options) => options.mount &&\r\n    (options.required ||\r\n        options.min ||\r\n        options.max ||\r\n        options.maxLength ||\r\n        options.minLength ||\r\n        options.pattern ||\r\n        options.validate);\n\nfunction schemaErrorLookup(errors, _fields, name) {\r\n    const error = get(errors, name);\r\n    if (error || isKey(name)) {\r\n        return {\r\n            error,\r\n            name,\r\n        };\r\n    }\r\n    const names = name.split('.');\r\n    while (names.length) {\r\n        const fieldName = names.join('.');\r\n        const field = get(_fields, fieldName);\r\n        const foundError = get(errors, fieldName);\r\n        if (field && !Array.isArray(field) && name !== fieldName) {\r\n            return { name };\r\n        }\r\n        if (foundError && foundError.type) {\r\n            return {\r\n                name: fieldName,\r\n                error: foundError,\r\n            };\r\n        }\r\n        names.pop();\r\n    }\r\n    return {\r\n        name,\r\n    };\r\n}\n\nvar skipValidation = (isBlurEvent, isTouched, isSubmitted, reValidateMode, mode) => {\r\n    if (mode.isOnAll) {\r\n        return false;\r\n    }\r\n    else if (!isSubmitted && mode.isOnTouch) {\r\n        return !(isTouched || isBlurEvent);\r\n    }\r\n    else if (isSubmitted ? reValidateMode.isOnBlur : mode.isOnBlur) {\r\n        return !isBlurEvent;\r\n    }\r\n    else if (isSubmitted ? reValidateMode.isOnChange : mode.isOnChange) {\r\n        return isBlurEvent;\r\n    }\r\n    return true;\r\n};\n\nvar unsetEmptyArray = (ref, name) => !compact(get(ref, name)).length && unset(ref, name);\n\nconst defaultOptions = {\r\n    mode: VALIDATION_MODE.onSubmit,\r\n    reValidateMode: VALIDATION_MODE.onChange,\r\n    shouldFocusError: true,\r\n};\r\nfunction createFormControl(props = {}, flushRootRender) {\r\n    let _options = {\r\n        ...defaultOptions,\r\n        ...props,\r\n    };\r\n    const shouldCaptureDirtyFields = props.resetOptions && props.resetOptions.keepDirtyValues;\r\n    let _formState = {\r\n        submitCount: 0,\r\n        isDirty: false,\r\n        isLoading: true,\r\n        isValidating: false,\r\n        isSubmitted: false,\r\n        isSubmitting: false,\r\n        isSubmitSuccessful: false,\r\n        isValid: false,\r\n        touchedFields: {},\r\n        dirtyFields: {},\r\n        errors: {},\r\n    };\r\n    let _fields = {};\r\n    let _defaultValues = isObject(_options.defaultValues) || isObject(_options.values)\r\n        ? cloneObject(_options.defaultValues || _options.values) || {}\r\n        : {};\r\n    let _formValues = _options.shouldUnregister\r\n        ? {}\r\n        : cloneObject(_defaultValues);\r\n    let _stateFlags = {\r\n        action: false,\r\n        mount: false,\r\n        watch: false,\r\n    };\r\n    let _names = {\r\n        mount: new Set(),\r\n        unMount: new Set(),\r\n        array: new Set(),\r\n        watch: new Set(),\r\n    };\r\n    let delayErrorCallback;\r\n    let timer = 0;\r\n    const _proxyFormState = {\r\n        isDirty: false,\r\n        dirtyFields: false,\r\n        touchedFields: false,\r\n        isValidating: false,\r\n        isValid: false,\r\n        errors: false,\r\n    };\r\n    const _subjects = {\r\n        watch: createSubject(),\r\n        array: createSubject(),\r\n        state: createSubject(),\r\n    };\r\n    const validationModeBeforeSubmit = getValidationModes(_options.mode);\r\n    const validationModeAfterSubmit = getValidationModes(_options.reValidateMode);\r\n    const shouldDisplayAllAssociatedErrors = _options.criteriaMode === VALIDATION_MODE.all;\r\n    const debounce = (callback) => (wait) => {\r\n        clearTimeout(timer);\r\n        timer = window.setTimeout(callback, wait);\r\n    };\r\n    const _updateValid = async (shouldUpdateValid) => {\r\n        if (_proxyFormState.isValid || shouldUpdateValid) {\r\n            const isValid = _options.resolver\r\n                ? isEmptyObject((await _executeSchema()).errors)\r\n                : await executeBuiltInValidation(_fields, true);\r\n            if (isValid !== _formState.isValid) {\r\n                _subjects.state.next({\r\n                    isValid,\r\n                });\r\n            }\r\n        }\r\n    };\r\n    const _updateIsValidating = (value) => _proxyFormState.isValidating &&\r\n        _subjects.state.next({\r\n            isValidating: value,\r\n        });\r\n    const _updateFieldArray = (name, values = [], method, args, shouldSetValues = true, shouldUpdateFieldsAndState = true) => {\r\n        if (args && method) {\r\n            _stateFlags.action = true;\r\n            if (shouldUpdateFieldsAndState && Array.isArray(get(_fields, name))) {\r\n                const fieldValues = method(get(_fields, name), args.argA, args.argB);\r\n                shouldSetValues && set(_fields, name, fieldValues);\r\n            }\r\n            if (shouldUpdateFieldsAndState &&\r\n                Array.isArray(get(_formState.errors, name))) {\r\n                const errors = method(get(_formState.errors, name), args.argA, args.argB);\r\n                shouldSetValues && set(_formState.errors, name, errors);\r\n                unsetEmptyArray(_formState.errors, name);\r\n            }\r\n            if (_proxyFormState.touchedFields &&\r\n                shouldUpdateFieldsAndState &&\r\n                Array.isArray(get(_formState.touchedFields, name))) {\r\n                const touchedFields = method(get(_formState.touchedFields, name), args.argA, args.argB);\r\n                shouldSetValues && set(_formState.touchedFields, name, touchedFields);\r\n            }\r\n            if (_proxyFormState.dirtyFields) {\r\n                _formState.dirtyFields = getDirtyFields(_defaultValues, _formValues);\r\n            }\r\n            _subjects.state.next({\r\n                name,\r\n                isDirty: _getDirty(name, values),\r\n                dirtyFields: _formState.dirtyFields,\r\n                errors: _formState.errors,\r\n                isValid: _formState.isValid,\r\n            });\r\n        }\r\n        else {\r\n            set(_formValues, name, values);\r\n        }\r\n    };\r\n    const updateErrors = (name, error) => {\r\n        set(_formState.errors, name, error);\r\n        _subjects.state.next({\r\n            errors: _formState.errors,\r\n        });\r\n    };\r\n    const updateValidAndValue = (name, shouldSkipSetValueAs, value, ref) => {\r\n        const field = get(_fields, name);\r\n        if (field) {\r\n            const defaultValue = get(_formValues, name, isUndefined(value) ? get(_defaultValues, name) : value);\r\n            isUndefined(defaultValue) ||\r\n                (ref && ref.defaultChecked) ||\r\n                shouldSkipSetValueAs\r\n                ? set(_formValues, name, shouldSkipSetValueAs ? defaultValue : getFieldValue(field._f))\r\n                : setFieldValue(name, defaultValue);\r\n            _stateFlags.mount && _updateValid();\r\n        }\r\n    };\r\n    const updateTouchAndDirty = (name, fieldValue, isBlurEvent, shouldDirty, shouldRender) => {\r\n        let shouldUpdateField = false;\r\n        let isPreviousDirty = false;\r\n        const output = {\r\n            name,\r\n        };\r\n        if (!isBlurEvent || shouldDirty) {\r\n            if (_proxyFormState.isDirty) {\r\n                isPreviousDirty = _formState.isDirty;\r\n                _formState.isDirty = output.isDirty = _getDirty();\r\n                shouldUpdateField = isPreviousDirty !== output.isDirty;\r\n            }\r\n            const isCurrentFieldPristine = deepEqual(get(_defaultValues, name), fieldValue);\r\n            isPreviousDirty = get(_formState.dirtyFields, name);\r\n            isCurrentFieldPristine\r\n                ? unset(_formState.dirtyFields, name)\r\n                : set(_formState.dirtyFields, name, true);\r\n            output.dirtyFields = _formState.dirtyFields;\r\n            shouldUpdateField =\r\n                shouldUpdateField ||\r\n                    (_proxyFormState.dirtyFields &&\r\n                        isPreviousDirty !== !isCurrentFieldPristine);\r\n        }\r\n        if (isBlurEvent) {\r\n            const isPreviousFieldTouched = get(_formState.touchedFields, name);\r\n            if (!isPreviousFieldTouched) {\r\n                set(_formState.touchedFields, name, isBlurEvent);\r\n                output.touchedFields = _formState.touchedFields;\r\n                shouldUpdateField =\r\n                    shouldUpdateField ||\r\n                        (_proxyFormState.touchedFields &&\r\n                            isPreviousFieldTouched !== isBlurEvent);\r\n            }\r\n        }\r\n        shouldUpdateField && shouldRender && _subjects.state.next(output);\r\n        return shouldUpdateField ? output : {};\r\n    };\r\n    const shouldRenderByError = (name, isValid, error, fieldState) => {\r\n        const previousFieldError = get(_formState.errors, name);\r\n        const shouldUpdateValid = _proxyFormState.isValid &&\r\n            isBoolean(isValid) &&\r\n            _formState.isValid !== isValid;\r\n        if (props.delayError && error) {\r\n            delayErrorCallback = debounce(() => updateErrors(name, error));\r\n            delayErrorCallback(props.delayError);\r\n        }\r\n        else {\r\n            clearTimeout(timer);\r\n            delayErrorCallback = null;\r\n            error\r\n                ? set(_formState.errors, name, error)\r\n                : unset(_formState.errors, name);\r\n        }\r\n        if ((error ? !deepEqual(previousFieldError, error) : previousFieldError) ||\r\n            !isEmptyObject(fieldState) ||\r\n            shouldUpdateValid) {\r\n            const updatedFormState = {\r\n                ...fieldState,\r\n                ...(shouldUpdateValid && isBoolean(isValid) ? { isValid } : {}),\r\n                errors: _formState.errors,\r\n                name,\r\n            };\r\n            _formState = {\r\n                ..._formState,\r\n                ...updatedFormState,\r\n            };\r\n            _subjects.state.next(updatedFormState);\r\n        }\r\n        _updateIsValidating(false);\r\n    };\r\n    const _executeSchema = async (name) => await _options.resolver(_formValues, _options.context, getResolverOptions(name || _names.mount, _fields, _options.criteriaMode, _options.shouldUseNativeValidation));\r\n    const executeSchemaAndUpdateState = async (names) => {\r\n        const { errors } = await _executeSchema();\r\n        if (names) {\r\n            for (const name of names) {\r\n                const error = get(errors, name);\r\n                error\r\n                    ? set(_formState.errors, name, error)\r\n                    : unset(_formState.errors, name);\r\n            }\r\n        }\r\n        else {\r\n            _formState.errors = errors;\r\n        }\r\n        return errors;\r\n    };\r\n    const executeBuiltInValidation = async (fields, shouldOnlyCheckValid, context = {\r\n        valid: true,\r\n    }) => {\r\n        for (const name in fields) {\r\n            const field = fields[name];\r\n            if (field) {\r\n                const { _f, ...fieldValue } = field;\r\n                if (_f) {\r\n                    const isFieldArrayRoot = _names.array.has(_f.name);\r\n                    const fieldError = await validateField(field, _formValues, shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation, isFieldArrayRoot);\r\n                    if (fieldError[_f.name]) {\r\n                        context.valid = false;\r\n                        if (shouldOnlyCheckValid) {\r\n                            break;\r\n                        }\r\n                    }\r\n                    !shouldOnlyCheckValid &&\r\n                        (get(fieldError, _f.name)\r\n                            ? isFieldArrayRoot\r\n                                ? updateFieldArrayRootError(_formState.errors, fieldError, _f.name)\r\n                                : set(_formState.errors, _f.name, fieldError[_f.name])\r\n                            : unset(_formState.errors, _f.name));\r\n                }\r\n                fieldValue &&\r\n                    (await executeBuiltInValidation(fieldValue, shouldOnlyCheckValid, context));\r\n            }\r\n        }\r\n        return context.valid;\r\n    };\r\n    const _removeUnmounted = () => {\r\n        for (const name of _names.unMount) {\r\n            const field = get(_fields, name);\r\n            field &&\r\n                (field._f.refs\r\n                    ? field._f.refs.every((ref) => !live(ref))\r\n                    : !live(field._f.ref)) &&\r\n                unregister(name);\r\n        }\r\n        _names.unMount = new Set();\r\n    };\r\n    const _getDirty = (name, data) => (name && data && set(_formValues, name, data),\r\n        !deepEqual(getValues(), _defaultValues));\r\n    const _getWatch = (names, defaultValue, isGlobal) => generateWatchOutput(names, _names, {\r\n        ...(_stateFlags.mount\r\n            ? _formValues\r\n            : isUndefined(defaultValue)\r\n                ? _defaultValues\r\n                : isString(names)\r\n                    ? { [names]: defaultValue }\r\n                    : defaultValue),\r\n    }, isGlobal, defaultValue);\r\n    const _getFieldArray = (name) => compact(get(_stateFlags.mount ? _formValues : _defaultValues, name, props.shouldUnregister ? get(_defaultValues, name, []) : []));\r\n    const setFieldValue = (name, value, options = {}) => {\r\n        const field = get(_fields, name);\r\n        let fieldValue = value;\r\n        if (field) {\r\n            const fieldReference = field._f;\r\n            if (fieldReference) {\r\n                !fieldReference.disabled &&\r\n                    set(_formValues, name, getFieldValueAs(value, fieldReference));\r\n                fieldValue =\r\n                    isHTMLElement(fieldReference.ref) && isNullOrUndefined(value)\r\n                        ? ''\r\n                        : value;\r\n                if (isMultipleSelect(fieldReference.ref)) {\r\n                    [...fieldReference.ref.options].forEach((optionRef) => (optionRef.selected = fieldValue.includes(optionRef.value)));\r\n                }\r\n                else if (fieldReference.refs) {\r\n                    if (isCheckBoxInput(fieldReference.ref)) {\r\n                        fieldReference.refs.length > 1\r\n                            ? fieldReference.refs.forEach((checkboxRef) => (!checkboxRef.defaultChecked || !checkboxRef.disabled) &&\r\n                                (checkboxRef.checked = Array.isArray(fieldValue)\r\n                                    ? !!fieldValue.find((data) => data === checkboxRef.value)\r\n                                    : fieldValue === checkboxRef.value))\r\n                            : fieldReference.refs[0] &&\r\n                                (fieldReference.refs[0].checked = !!fieldValue);\r\n                    }\r\n                    else {\r\n                        fieldReference.refs.forEach((radioRef) => (radioRef.checked = radioRef.value === fieldValue));\r\n                    }\r\n                }\r\n                else if (isFileInput(fieldReference.ref)) {\r\n                    fieldReference.ref.value = '';\r\n                }\r\n                else {\r\n                    fieldReference.ref.value = fieldValue;\r\n                    if (!fieldReference.ref.type) {\r\n                        _subjects.watch.next({\r\n                            name,\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        (options.shouldDirty || options.shouldTouch) &&\r\n            updateTouchAndDirty(name, fieldValue, options.shouldTouch, options.shouldDirty, true);\r\n        options.shouldValidate && trigger(name);\r\n    };\r\n    const setValues = (name, value, options) => {\r\n        for (const fieldKey in value) {\r\n            const fieldValue = value[fieldKey];\r\n            const fieldName = `${name}.${fieldKey}`;\r\n            const field = get(_fields, fieldName);\r\n            (_names.array.has(name) ||\r\n                !isPrimitive(fieldValue) ||\r\n                (field && !field._f)) &&\r\n                !isDateObject(fieldValue)\r\n                ? setValues(fieldName, fieldValue, options)\r\n                : setFieldValue(fieldName, fieldValue, options);\r\n        }\r\n    };\r\n    const setValue = (name, value, options = {}) => {\r\n        const field = get(_fields, name);\r\n        const isFieldArray = _names.array.has(name);\r\n        const cloneValue = cloneObject(value);\r\n        set(_formValues, name, cloneValue);\r\n        if (isFieldArray) {\r\n            _subjects.array.next({\r\n                name,\r\n                values: _formValues,\r\n            });\r\n            if ((_proxyFormState.isDirty || _proxyFormState.dirtyFields) &&\r\n                options.shouldDirty) {\r\n                _subjects.state.next({\r\n                    name,\r\n                    dirtyFields: getDirtyFields(_defaultValues, _formValues),\r\n                    isDirty: _getDirty(name, cloneValue),\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            field && !field._f && !isNullOrUndefined(cloneValue)\r\n                ? setValues(name, cloneValue, options)\r\n                : setFieldValue(name, cloneValue, options);\r\n        }\r\n        isWatched(name, _names) && _subjects.state.next({});\r\n        _subjects.watch.next({\r\n            name,\r\n        });\r\n        !_stateFlags.mount && flushRootRender();\r\n    };\r\n    const onChange = async (event) => {\r\n        const target = event.target;\r\n        let name = target.name;\r\n        const field = get(_fields, name);\r\n        const getCurrentFieldValue = () => target.type ? getFieldValue(field._f) : getEventValue(event);\r\n        if (field) {\r\n            let error;\r\n            let isValid;\r\n            const fieldValue = getCurrentFieldValue();\r\n            const isBlurEvent = event.type === EVENTS.BLUR || event.type === EVENTS.FOCUS_OUT;\r\n            const shouldSkipValidation = (!hasValidation(field._f) &&\r\n                !_options.resolver &&\r\n                !get(_formState.errors, name) &&\r\n                !field._f.deps) ||\r\n                skipValidation(isBlurEvent, get(_formState.touchedFields, name), _formState.isSubmitted, validationModeAfterSubmit, validationModeBeforeSubmit);\r\n            const watched = isWatched(name, _names, isBlurEvent);\r\n            set(_formValues, name, fieldValue);\r\n            if (isBlurEvent) {\r\n                field._f.onBlur && field._f.onBlur(event);\r\n                delayErrorCallback && delayErrorCallback(0);\r\n            }\r\n            else if (field._f.onChange) {\r\n                field._f.onChange(event);\r\n            }\r\n            const fieldState = updateTouchAndDirty(name, fieldValue, isBlurEvent, false);\r\n            const shouldRender = !isEmptyObject(fieldState) || watched;\r\n            !isBlurEvent &&\r\n                _subjects.watch.next({\r\n                    name,\r\n                    type: event.type,\r\n                });\r\n            if (shouldSkipValidation) {\r\n                _proxyFormState.isValid && _updateValid();\r\n                return (shouldRender &&\r\n                    _subjects.state.next({ name, ...(watched ? {} : fieldState) }));\r\n            }\r\n            !isBlurEvent && watched && _subjects.state.next({});\r\n            _updateIsValidating(true);\r\n            if (_options.resolver) {\r\n                const { errors } = await _executeSchema([name]);\r\n                const previousErrorLookupResult = schemaErrorLookup(_formState.errors, _fields, name);\r\n                const errorLookupResult = schemaErrorLookup(errors, _fields, previousErrorLookupResult.name || name);\r\n                error = errorLookupResult.error;\r\n                name = errorLookupResult.name;\r\n                isValid = isEmptyObject(errors);\r\n            }\r\n            else {\r\n                error = (await validateField(field, _formValues, shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation))[name];\r\n                if (error) {\r\n                    isValid = false;\r\n                }\r\n                else if (_proxyFormState.isValid) {\r\n                    isValid = await executeBuiltInValidation(_fields, true);\r\n                }\r\n            }\r\n            field._f.deps &&\r\n                trigger(field._f.deps);\r\n            shouldRenderByError(name, isValid, error, fieldState);\r\n        }\r\n    };\r\n    const trigger = async (name, options = {}) => {\r\n        let isValid;\r\n        let validationResult;\r\n        const fieldNames = convertToArrayPayload(name);\r\n        _updateIsValidating(true);\r\n        if (_options.resolver) {\r\n            const errors = await executeSchemaAndUpdateState(isUndefined(name) ? name : fieldNames);\r\n            isValid = isEmptyObject(errors);\r\n            validationResult = name\r\n                ? !fieldNames.some((name) => get(errors, name))\r\n                : isValid;\r\n        }\r\n        else if (name) {\r\n            validationResult = (await Promise.all(fieldNames.map(async (fieldName) => {\r\n                const field = get(_fields, fieldName);\r\n                return await executeBuiltInValidation(field && field._f ? { [fieldName]: field } : field);\r\n            }))).every(Boolean);\r\n            !(!validationResult && !_formState.isValid) && _updateValid();\r\n        }\r\n        else {\r\n            validationResult = isValid = await executeBuiltInValidation(_fields);\r\n        }\r\n        _subjects.state.next({\r\n            ...(!isString(name) ||\r\n                (_proxyFormState.isValid && isValid !== _formState.isValid)\r\n                ? {}\r\n                : { name }),\r\n            ...(_options.resolver || !name ? { isValid } : {}),\r\n            errors: _formState.errors,\r\n            isValidating: false,\r\n        });\r\n        options.shouldFocus &&\r\n            !validationResult &&\r\n            focusFieldBy(_fields, (key) => key && get(_formState.errors, key), name ? fieldNames : _names.mount);\r\n        return validationResult;\r\n    };\r\n    const getValues = (fieldNames) => {\r\n        const values = {\r\n            ..._defaultValues,\r\n            ...(_stateFlags.mount ? _formValues : {}),\r\n        };\r\n        return isUndefined(fieldNames)\r\n            ? values\r\n            : isString(fieldNames)\r\n                ? get(values, fieldNames)\r\n                : fieldNames.map((name) => get(values, name));\r\n    };\r\n    const getFieldState = (name, formState) => ({\r\n        invalid: !!get((formState || _formState).errors, name),\r\n        isDirty: !!get((formState || _formState).dirtyFields, name),\r\n        isTouched: !!get((formState || _formState).touchedFields, name),\r\n        error: get((formState || _formState).errors, name),\r\n    });\r\n    const clearErrors = (name) => {\r\n        name &&\r\n            convertToArrayPayload(name).forEach((inputName) => unset(_formState.errors, inputName));\r\n        _subjects.state.next({\r\n            errors: name ? _formState.errors : {},\r\n        });\r\n    };\r\n    const setError = (name, error, options) => {\r\n        const ref = (get(_fields, name, { _f: {} })._f || {}).ref;\r\n        set(_formState.errors, name, {\r\n            ...error,\r\n            ref,\r\n        });\r\n        _subjects.state.next({\r\n            name,\r\n            errors: _formState.errors,\r\n            isValid: false,\r\n        });\r\n        options && options.shouldFocus && ref && ref.focus && ref.focus();\r\n    };\r\n    const watch = (name, defaultValue) => isFunction(name)\r\n        ? _subjects.watch.subscribe({\r\n            next: (payload) => name(_getWatch(undefined, defaultValue), payload),\r\n        })\r\n        : _getWatch(name, defaultValue, true);\r\n    const unregister = (name, options = {}) => {\r\n        for (const fieldName of name ? convertToArrayPayload(name) : _names.mount) {\r\n            _names.mount.delete(fieldName);\r\n            _names.array.delete(fieldName);\r\n            if (get(_fields, fieldName)) {\r\n                if (!options.keepValue) {\r\n                    unset(_fields, fieldName);\r\n                    unset(_formValues, fieldName);\r\n                }\r\n                !options.keepError && unset(_formState.errors, fieldName);\r\n                !options.keepDirty && unset(_formState.dirtyFields, fieldName);\r\n                !options.keepTouched && unset(_formState.touchedFields, fieldName);\r\n                !_options.shouldUnregister &&\r\n                    !options.keepDefaultValue &&\r\n                    unset(_defaultValues, fieldName);\r\n            }\r\n        }\r\n        _subjects.watch.next({});\r\n        _subjects.state.next({\r\n            ..._formState,\r\n            ...(!options.keepDirty ? {} : { isDirty: _getDirty() }),\r\n        });\r\n        !options.keepIsValid && _updateValid();\r\n    };\r\n    const register = (name, options = {}) => {\r\n        let field = get(_fields, name);\r\n        const disabledIsDefined = isBoolean(options.disabled);\r\n        set(_fields, name, {\r\n            ...(field || {}),\r\n            _f: {\r\n                ...(field && field._f ? field._f : { ref: { name } }),\r\n                name,\r\n                mount: true,\r\n                ...options,\r\n            },\r\n        });\r\n        _names.mount.add(name);\r\n        field\r\n            ? disabledIsDefined &&\r\n                set(_formValues, name, options.disabled\r\n                    ? undefined\r\n                    : get(_formValues, name, getFieldValue(field._f)))\r\n            : updateValidAndValue(name, true, options.value);\r\n        return {\r\n            ...(disabledIsDefined ? { disabled: options.disabled } : {}),\r\n            ...(_options.shouldUseNativeValidation\r\n                ? {\r\n                    required: !!options.required,\r\n                    min: getRuleValue(options.min),\r\n                    max: getRuleValue(options.max),\r\n                    minLength: getRuleValue(options.minLength),\r\n                    maxLength: getRuleValue(options.maxLength),\r\n                    pattern: getRuleValue(options.pattern),\r\n                }\r\n                : {}),\r\n            name,\r\n            onChange,\r\n            onBlur: onChange,\r\n            ref: (ref) => {\r\n                if (ref) {\r\n                    register(name, options);\r\n                    field = get(_fields, name);\r\n                    const fieldRef = isUndefined(ref.value)\r\n                        ? ref.querySelectorAll\r\n                            ? ref.querySelectorAll('input,select,textarea')[0] || ref\r\n                            : ref\r\n                        : ref;\r\n                    const radioOrCheckbox = isRadioOrCheckbox(fieldRef);\r\n                    const refs = field._f.refs || [];\r\n                    if (radioOrCheckbox\r\n                        ? refs.find((option) => option === fieldRef)\r\n                        : fieldRef === field._f.ref) {\r\n                        return;\r\n                    }\r\n                    set(_fields, name, {\r\n                        _f: {\r\n                            ...field._f,\r\n                            ...(radioOrCheckbox\r\n                                ? {\r\n                                    refs: [\r\n                                        ...refs.filter(live),\r\n                                        fieldRef,\r\n                                        ...(Array.isArray(get(_defaultValues, name)) ? [{}] : []),\r\n                                    ],\r\n                                    ref: { type: fieldRef.type, name },\r\n                                }\r\n                                : { ref: fieldRef }),\r\n                        },\r\n                    });\r\n                    updateValidAndValue(name, false, undefined, fieldRef);\r\n                }\r\n                else {\r\n                    field = get(_fields, name, {});\r\n                    if (field._f) {\r\n                        field._f.mount = false;\r\n                    }\r\n                    (_options.shouldUnregister || options.shouldUnregister) &&\r\n                        !(isNameInFieldArray(_names.array, name) && _stateFlags.action) &&\r\n                        _names.unMount.add(name);\r\n                }\r\n            },\r\n        };\r\n    };\r\n    const _focusError = () => _options.shouldFocusError &&\r\n        focusFieldBy(_fields, (key) => key && get(_formState.errors, key), _names.mount);\r\n    const handleSubmit = (onValid, onInvalid) => async (e) => {\r\n        if (e) {\r\n            e.preventDefault && e.preventDefault();\r\n            e.persist && e.persist();\r\n        }\r\n        let fieldValues = cloneObject(_formValues);\r\n        _subjects.state.next({\r\n            isSubmitting: true,\r\n        });\r\n        if (_options.resolver) {\r\n            const { errors, values } = await _executeSchema();\r\n            _formState.errors = errors;\r\n            fieldValues = values;\r\n        }\r\n        else {\r\n            await executeBuiltInValidation(_fields);\r\n        }\r\n        unset(_formState.errors, 'root');\r\n        if (isEmptyObject(_formState.errors)) {\r\n            _subjects.state.next({\r\n                errors: {},\r\n            });\r\n            await onValid(fieldValues, e);\r\n        }\r\n        else {\r\n            if (onInvalid) {\r\n                await onInvalid({ ..._formState.errors }, e);\r\n            }\r\n            _focusError();\r\n        }\r\n        _subjects.state.next({\r\n            isSubmitted: true,\r\n            isSubmitting: false,\r\n            isSubmitSuccessful: isEmptyObject(_formState.errors),\r\n            submitCount: _formState.submitCount + 1,\r\n            errors: _formState.errors,\r\n        });\r\n    };\r\n    const resetField = (name, options = {}) => {\r\n        if (get(_fields, name)) {\r\n            if (isUndefined(options.defaultValue)) {\r\n                setValue(name, get(_defaultValues, name));\r\n            }\r\n            else {\r\n                setValue(name, options.defaultValue);\r\n                set(_defaultValues, name, options.defaultValue);\r\n            }\r\n            if (!options.keepTouched) {\r\n                unset(_formState.touchedFields, name);\r\n            }\r\n            if (!options.keepDirty) {\r\n                unset(_formState.dirtyFields, name);\r\n                _formState.isDirty = options.defaultValue\r\n                    ? _getDirty(name, get(_defaultValues, name))\r\n                    : _getDirty();\r\n            }\r\n            if (!options.keepError) {\r\n                unset(_formState.errors, name);\r\n                _proxyFormState.isValid && _updateValid();\r\n            }\r\n            _subjects.state.next({ ..._formState });\r\n        }\r\n    };\r\n    const _reset = (formValues, keepStateOptions = {}) => {\r\n        const updatedValues = formValues || _defaultValues;\r\n        const cloneUpdatedValues = cloneObject(updatedValues);\r\n        const values = formValues && !isEmptyObject(formValues)\r\n            ? cloneUpdatedValues\r\n            : _defaultValues;\r\n        if (!keepStateOptions.keepDefaultValues) {\r\n            _defaultValues = updatedValues;\r\n        }\r\n        if (!keepStateOptions.keepValues) {\r\n            if (keepStateOptions.keepDirtyValues || shouldCaptureDirtyFields) {\r\n                for (const fieldName of _names.mount) {\r\n                    get(_formState.dirtyFields, fieldName)\r\n                        ? set(values, fieldName, get(_formValues, fieldName))\r\n                        : setValue(fieldName, get(values, fieldName));\r\n                }\r\n            }\r\n            else {\r\n                if (isWeb && isUndefined(formValues)) {\r\n                    for (const name of _names.mount) {\r\n                        const field = get(_fields, name);\r\n                        if (field && field._f) {\r\n                            const fieldReference = Array.isArray(field._f.refs)\r\n                                ? field._f.refs[0]\r\n                                : field._f.ref;\r\n                            if (isHTMLElement(fieldReference)) {\r\n                                const form = fieldReference.closest('form');\r\n                                if (form) {\r\n                                    form.reset();\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                _fields = {};\r\n            }\r\n            _formValues = props.shouldUnregister\r\n                ? keepStateOptions.keepDefaultValues\r\n                    ? cloneObject(_defaultValues)\r\n                    : {}\r\n                : cloneUpdatedValues;\r\n            _subjects.array.next({\r\n                values,\r\n            });\r\n            _subjects.watch.next({\r\n                values,\r\n            });\r\n        }\r\n        _names = {\r\n            mount: new Set(),\r\n            unMount: new Set(),\r\n            array: new Set(),\r\n            watch: new Set(),\r\n            watchAll: false,\r\n            focus: '',\r\n        };\r\n        !_stateFlags.mount && flushRootRender();\r\n        _stateFlags.mount =\r\n            !_proxyFormState.isValid || !!keepStateOptions.keepIsValid;\r\n        _stateFlags.watch = !!props.shouldUnregister;\r\n        _subjects.state.next({\r\n            submitCount: keepStateOptions.keepSubmitCount\r\n                ? _formState.submitCount\r\n                : 0,\r\n            isDirty: keepStateOptions.keepDirty || keepStateOptions.keepDirtyValues\r\n                ? _formState.isDirty\r\n                : !!(keepStateOptions.keepDefaultValues &&\r\n                    !deepEqual(formValues, _defaultValues)),\r\n            isSubmitted: keepStateOptions.keepIsSubmitted\r\n                ? _formState.isSubmitted\r\n                : false,\r\n            dirtyFields: keepStateOptions.keepDirty || keepStateOptions.keepDirtyValues\r\n                ? _formState.dirtyFields\r\n                : keepStateOptions.keepDefaultValues && formValues\r\n                    ? getDirtyFields(_defaultValues, formValues)\r\n                    : {},\r\n            touchedFields: keepStateOptions.keepTouched\r\n                ? _formState.touchedFields\r\n                : {},\r\n            errors: keepStateOptions.keepErrors ? _formState.errors : {},\r\n            isSubmitting: false,\r\n            isSubmitSuccessful: false,\r\n        });\r\n    };\r\n    const reset = (formValues, keepStateOptions) => _reset(isFunction(formValues)\r\n        ? formValues(_formValues)\r\n        : formValues, keepStateOptions);\r\n    const setFocus = (name, options = {}) => {\r\n        const field = get(_fields, name);\r\n        const fieldReference = field && field._f;\r\n        if (fieldReference) {\r\n            const fieldRef = fieldReference.refs\r\n                ? fieldReference.refs[0]\r\n                : fieldReference.ref;\r\n            if (fieldRef.focus) {\r\n                fieldRef.focus();\r\n                options.shouldSelect && fieldRef.select();\r\n            }\r\n        }\r\n    };\r\n    const _updateFormState = (updatedFormState) => {\r\n        _formState = {\r\n            ..._formState,\r\n            ...updatedFormState,\r\n        };\r\n    };\r\n    if (isFunction(_options.defaultValues)) {\r\n        _options.defaultValues().then((values) => {\r\n            reset(values, _options.resetOptions);\r\n            _subjects.state.next({\r\n                isLoading: false,\r\n            });\r\n        });\r\n    }\r\n    return {\r\n        control: {\r\n            register,\r\n            unregister,\r\n            getFieldState,\r\n            _executeSchema,\r\n            _focusError,\r\n            _getWatch,\r\n            _getDirty,\r\n            _updateValid,\r\n            _removeUnmounted,\r\n            _updateFieldArray,\r\n            _getFieldArray,\r\n            _reset,\r\n            _updateFormState,\r\n            _subjects,\r\n            _proxyFormState,\r\n            get _fields() {\r\n                return _fields;\r\n            },\r\n            get _formValues() {\r\n                return _formValues;\r\n            },\r\n            get _stateFlags() {\r\n                return _stateFlags;\r\n            },\r\n            set _stateFlags(value) {\r\n                _stateFlags = value;\r\n            },\r\n            get _defaultValues() {\r\n                return _defaultValues;\r\n            },\r\n            get _names() {\r\n                return _names;\r\n            },\r\n            set _names(value) {\r\n                _names = value;\r\n            },\r\n            get _formState() {\r\n                return _formState;\r\n            },\r\n            set _formState(value) {\r\n                _formState = value;\r\n            },\r\n            get _options() {\r\n                return _options;\r\n            },\r\n            set _options(value) {\r\n                _options = {\r\n                    ..._options,\r\n                    ...value,\r\n                };\r\n            },\r\n        },\r\n        trigger,\r\n        register,\r\n        handleSubmit,\r\n        watch,\r\n        setValue,\r\n        getValues,\r\n        reset,\r\n        resetField,\r\n        clearErrors,\r\n        unregister,\r\n        setError,\r\n        setFocus,\r\n        getFieldState,\r\n    };\r\n}\n\n/**\r\n * Custom hook to manage the entire form.\r\n *\r\n * @remarks\r\n * [API](https://react-hook-form.com/api/useform) • [Demo](https://codesandbox.io/s/react-hook-form-get-started-ts-5ksmm) • [Video](https://www.youtube.com/watch?v=RkXv4AXXC_4)\r\n *\r\n * @param props - form configuration and validation parameters.\r\n *\r\n * @returns methods - individual functions to manage the form state. {@link UseFormReturn}\r\n *\r\n * @example\r\n * ```tsx\r\n * function App() {\r\n *   const { register, handleSubmit, watch, formState: { errors } } = useForm();\r\n *   const onSubmit = data => console.log(data);\r\n *\r\n *   console.log(watch(\"example\"));\r\n *\r\n *   return (\r\n *     <form onSubmit={handleSubmit(onSubmit)}>\r\n *       <input defaultValue=\"test\" {...register(\"example\")} />\r\n *       <input {...register(\"exampleRequired\", { required: true })} />\r\n *       {errors.exampleRequired && <span>This field is required</span>}\r\n *       <input type=\"submit\" />\r\n *     </form>\r\n *   );\r\n * }\r\n * ```\r\n */\r\nfunction useForm(props = {}) {\r\n    const _formControl = React.useRef();\r\n    const [formState, updateFormState] = React.useState({\r\n        isDirty: false,\r\n        isValidating: false,\r\n        isLoading: true,\r\n        isSubmitted: false,\r\n        isSubmitting: false,\r\n        isSubmitSuccessful: false,\r\n        isValid: false,\r\n        submitCount: 0,\r\n        dirtyFields: {},\r\n        touchedFields: {},\r\n        errors: {},\r\n        defaultValues: isFunction(props.defaultValues)\r\n            ? undefined\r\n            : props.defaultValues,\r\n    });\r\n    if (!_formControl.current) {\r\n        _formControl.current = {\r\n            ...createFormControl(props, () => updateFormState((formState) => ({ ...formState }))),\r\n            formState,\r\n        };\r\n    }\r\n    const control = _formControl.current.control;\r\n    control._options = props;\r\n    useSubscribe({\r\n        subject: control._subjects.state,\r\n        next: (value) => {\r\n            if (shouldRenderFormState(value, control._proxyFormState, control._updateFormState, true)) {\r\n                updateFormState({ ...control._formState });\r\n            }\r\n        },\r\n    });\r\n    React.useEffect(() => {\r\n        if (!control._stateFlags.mount) {\r\n            control._updateValid();\r\n            control._stateFlags.mount = true;\r\n        }\r\n        if (control._stateFlags.watch) {\r\n            control._stateFlags.watch = false;\r\n            control._subjects.state.next({});\r\n        }\r\n        control._removeUnmounted();\r\n    });\r\n    React.useEffect(() => {\r\n        if (props.values && !deepEqual(props.values, control._defaultValues)) {\r\n            control._reset(props.values, control._options.resetOptions);\r\n        }\r\n    }, [props.values, control]);\r\n    React.useEffect(() => {\r\n        formState.submitCount && control._focusError();\r\n    }, [control, formState.submitCount]);\r\n    _formControl.current.formState = getProxyFormState(formState, control);\r\n    return _formControl.current;\r\n}\n\nexport { Controller, FormProvider, appendErrors, get, set, useController, useFieldArray, useForm, useFormContext, useFormState, useWatch };\n//# sourceMappingURL=index.esm.mjs.map\n","import React from \"react\";\nimport { Footer, Header, ScrollWatch } from \"../components\";\nimport \"../pages/styles.scss\";\nimport { SEO } from \"../components/SEO\";\nimport classNames from \"classnames\";\nimport { useForm } from \"react-hook-form\";\n\nconst handleSubscribe = (data: any) => {\n  const subscribeURL =\n    \"https://assets.mailerlite.com/jsonp/285229/forms/76918907714143988/subscribe\";\n\n  const formData = new FormData();\n\n  Object.keys(data).forEach((field) => {\n    formData.append(`fields[${field}]`, data[field]);\n  });\n\n  return fetch(subscribeURL, {\n    method: \"POST\",\n    body: formData,\n  });\n};\n\nconst AboutUs = () => {\n  const {\n    register,\n    handleSubmit,\n    formState: { isSubmitSuccessful, errors },\n    reset,\n  } = useForm();\n\n  const onSubmit = async (data: any) => {\n    await handleSubscribe(data);\n    reset();\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <Header />\n      <main className=\"page\">\n        <section className=\"services inner-pages top-block\">\n          <div className=\"services__container\">\n            <div className=\"inner-pages__top-block\">\n              <div className=\"inner-pages__name\">\n                <h1>Let's talk</h1>\n              </div>\n            </div>\n            <br />\n\n            <div className=\"services__row\">\n              <div data-prlx-mouse-wrapper className=\"services__col-img\">\n                <img\n                  data-prlx-mouse\n                  src={\"/images/letstalk.svg\"}\n                  className={\"service-img1\"}\n                  width=\"420\"\n                />\n              </div>\n\n              <div className=\"services__col-content\">\n                <ScrollWatch\n                  as=\"div\"\n                  threshold=\"0.2\"\n                  className=\"services__text anim-upwards1\"\n                >\n                  Thank you for considering us. We understand that choosing the\n                  right partner to bring your vision to life is a crucial\n                  decision, and we want to make the process as easy and\n                  transparent as possible.\n                  <br />\n                  <br />\n                  That's why we offer a complimentary consultation call with our\n                  experienced team. During the call, we will take the time to\n                  understand your project needs, answer any questions you may\n                  have, and provide you with valuable insights on how we can\n                  help you achieve your goals.\n                  <br />\n                  <br />\n                  <a\n                    href=\"https://calendly.com/aurora-code/discovery-call\"\n                    className=\"button-submit\"\n                    target=\"_blank\"\n                  >\n                    Book free consultations\n                  </a>\n                </ScrollWatch>\n              </div>\n            </div>\n            <div className=\"services__row services__row_second\">\n              <div data-prlx-mouse-wrapper className=\"services__col-img\">\n                <img\n                  data-prlx-mouse\n                  src={\"/images/contact.svg\"}\n                  className={\"service-img2\"}\n                  width=\"420\"\n                />\n              </div>\n              <div className=\"services__col-content\">\n                <ScrollWatch\n                  as=\"div\"\n                  threshold=\"0.2\"\n                  className=\"services__text anim-upwards1\"\n                >\n                  {isSubmitSuccessful ? (\n                    <div className=\"success-message\">\n                      Thank you for your message. Our team will get back to you\n                      soon!\n                    </div>\n                  ) : (\n                    <>\n                      Or, send us a message and we will get back to you as soon\n                      as possible:\n                      <br />\n                      <br />\n                      <form onSubmit={handleSubmit(onSubmit)}>\n                        <div className=\"form\">\n                          <div className=\"form-line\">\n                            <input\n                              placeholder=\"Name *\"\n                              className={classNames(\n                                \"input\",\n                                errors.name && \"input_error\"\n                              )}\n                              {...register(\"name\", { required: true })}\n                            />\n                            {errors.name && (\n                              <span className=\"input-error-message\">\n                                Please enter your name\n                              </span>\n                            )}\n                          </div>\n                          <div className=\"form-line\">\n                            <input\n                              type=\"email\"\n                              autoComplete=\"email\"\n                              placeholder=\"Email *\"\n                              className={classNames(\n                                \"input\",\n                                errors.email && \"input_error\"\n                              )}\n                              {...register(\"email\", {\n                                required: true,\n                              })}\n                            />\n                            {errors.email && (\n                              <span className=\"input-error-message\">\n                                Please enter valid email address\n                              </span>\n                            )}\n                          </div>\n                          <div className=\"form-line\">\n                            <input\n                              autoComplete=\"off\"\n                              type=\"tel\"\n                              placeholder=\"Phone number\"\n                              className={classNames(\n                                \"input\",\n                                errors.phone && \"input_error\"\n                              )}\n                              {...register(\"phone\")}\n                            />\n                          </div>\n                          <div className=\"form-line\">\n                            <textarea\n                              cols={30}\n                              rows={6}\n                              placeholder=\"Your Message *\"\n                              className={classNames(\n                                \"input\",\n                                errors.message && \"input_error\"\n                              )}\n                              {...register(\"message\", { required: true })}\n                            ></textarea>\n                            {errors.message && (\n                              <span className=\"input-error-message\">\n                                Please enter your message\n                              </span>\n                            )}\n                          </div>\n\n                          <button type=\"submit\" className=\"button-submit\">\n                            Submit\n                          </button>\n                        </div>\n                      </form>\n                    </>\n                  )}\n                </ScrollWatch>\n              </div>\n            </div>\n          </div>\n        </section>\n      </main>\n      <Footer />\n    </div>\n  );\n};\nexport default AboutUs;\n\nexport const Head = () => {\n  return <SEO title={\"Contact\"} description={\"Contact Aurora Code\"} />;\n};\n"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","includes","key","call","join","module","exports","default","SEO","_ref","title","description","pathname","children","defaultTitle","defaultDescription","image","siteUrl","twitterUsername","useStaticQuery","site","siteMetadata","seo","url","React","name","content","src","crossOrigin","ScrollWatch","as","className","threshold","Component","ref","useRef","isVisible","setIsVisible","useState","isInViewport","isIntersecting","setIsIntersecting","useEffect","observer","IntersectionObserver","_ref2","entry","observe","current","disconnect","useIsInViewport","setTimeout","Header","withScroll","onHomePage","isDesktop","setIsDesktop","hasScrolled","setHasScrolled","isExpanded","setIsExpanded","areIndustriesExpanded","setAreIndustriesExpanded","trackScroll","useCallback","updatedHasScrolled","window","pageYOffset","innerWidth","addEventListener","removeEventListener","header","href","alt","type","onMouseEnter","onMouseLeave","onClick","target","x","Footer","scrollTo","Hero","id","BlogSection","blogPosts","allArticle","nodes","slice","map","post","link","thumbnail","isCheckBoxInput","element","isDateObject","value","Date","isNullOrUndefined","isObjectType","isObject","getEventValue","event","checked","isNameInFieldArray","names","has","substring","search","getNodeParentName","compact","filter","Boolean","isUndefined","val","undefined","get","obj","path","defaultValue","result","split","reduce","EVENTS","VALIDATION_MODE","INPUT_VALIDATION_RULES","getProxyFormState","formState","control","localProxyFormState","isRoot","defaultValues","_defaultValues","defineProperty","_key","_proxyFormState","isEmptyObject","keys","shouldRenderFormState","formStateData","updateFormState","find","convertToArrayPayload","useSubscribe","props","_props","subscription","disabled","subject","subscribe","next","unsubscribe","isString","generateWatchOutput","_names","formValues","isGlobal","watch","add","fieldName","watchAll","isWeb","HTMLElement","document","cloneObject","data","copy","Set","Blob","FileList","tempObject","prototypeCopy","constructor","isPlainObject","appendErrors","validateAllFieldCriteria","errors","message","types","isKey","test","stringToPath","input","replace","set","object","index","tempPath","lastIndex","newValue","objValue","isNaN","focusFieldBy","fields","callback","fieldsNames","field","_f","currentField","focus","refs","getValidationModes","mode","isOnSubmit","isOnBlur","isOnChange","isOnAll","isOnTouch","isWatched","isBlurEvent","some","watchName","startsWith","updateFieldArrayRootError","error","fieldArrayErrors","isBoolean","isFileInput","isFunction","isHTMLElement","owner","ownerDocument","defaultView","isMessage","isRadioInput","isRegex","RegExp","defaultResult","isValid","validResult","getCheckboxValue","options","values","option","attributes","defaultReturn","getRadioValue","previous","getValidateError","every","getValueAndMessage","validationData","validateField","async","shouldUseNativeValidation","isFieldArray","required","maxLength","minLength","min","max","pattern","validate","valueAsNumber","mount","inputValue","inputRef","setCustomValidity","reportValidity","isRadio","isCheckBox","isRadioOrCheckbox","isEmpty","appendErrorsCurry","bind","getMinMaxMessage","exceedMax","maxLengthMessage","minLengthMessage","maxType","minType","exceedMin","maxOutput","minOutput","valueDate","valueAsDate","convertTimeToDate","time","toDateString","isTime","isWeek","valueNumber","maxLengthOutput","minLengthOutput","patternValue","match","validateError","validationResult","unset","paths","childObject","updatePath","baseGet","isEmptyArray","createSubject","_observers","observers","o","isPrimitive","deepEqual","object1","object2","getTime","keys1","keys2","val1","val2","isMultipleSelect","live","isConnected","objectHasFunction","markFieldsDirty","isParentNodeArray","getDirtyFieldsFromDefaultValues","dirtyFieldsFromValues","getDirtyFields","getFieldValueAs","setValueAs","NaN","getFieldValue","files","selectedOptions","getRuleValue","rule","source","schemaErrorLookup","_fields","foundError","pop","defaultOptions","reValidateMode","shouldFocusError","createFormControl","flushRootRender","_options","shouldCaptureDirtyFields","resetOptions","keepDirtyValues","delayErrorCallback","_formState","submitCount","isDirty","isLoading","isValidating","isSubmitted","isSubmitting","isSubmitSuccessful","touchedFields","dirtyFields","_formValues","shouldUnregister","_stateFlags","action","unMount","array","timer","_subjects","state","validationModeBeforeSubmit","validationModeAfterSubmit","shouldDisplayAllAssociatedErrors","criteriaMode","_updateValid","shouldUpdateValid","resolver","_executeSchema","executeBuiltInValidation","_updateIsValidating","updateValidAndValue","shouldSkipSetValueAs","defaultChecked","setFieldValue","updateTouchAndDirty","fieldValue","shouldDirty","shouldRender","shouldUpdateField","isPreviousDirty","output","_getDirty","isCurrentFieldPristine","isPreviousFieldTouched","shouldRenderByError","fieldState","previousFieldError","delayError","updateErrors","wait","clearTimeout","updatedFormState","context","getResolverOptions","shouldOnlyCheckValid","valid","isFieldArrayRoot","fieldError","getValues","_getWatch","fieldReference","forEach","optionRef","selected","checkboxRef","radioRef","shouldTouch","shouldValidate","trigger","setValues","fieldKey","setValue","cloneValue","onChange","shouldSkipValidation","deps","isTouched","skipValidation","watched","onBlur","previousErrorLookupResult","errorLookupResult","fieldNames","executeSchemaAndUpdateState","Promise","all","shouldFocus","getFieldState","invalid","unregister","delete","keepValue","keepError","keepDirty","keepTouched","keepDefaultValue","keepIsValid","register","disabledIsDefined","fieldRef","querySelectorAll","radioOrCheckbox","_focusError","_reset","keepStateOptions","updatedValues","cloneUpdatedValues","keepDefaultValues","keepValues","form","closest","reset","keepSubmitCount","keepIsSubmitted","keepErrors","then","_removeUnmounted","_updateFieldArray","method","args","shouldSetValues","shouldUpdateFieldsAndState","fieldValues","argA","argB","unsetEmptyArray","_getFieldArray","_updateFormState","handleSubmit","onValid","onInvalid","e","preventDefault","persist","payload","resetField","clearErrors","inputName","setError","setFocus","shouldSelect","select","_formControl","useForm","width","onSubmit","formData","FormData","append","fetch","body","handleSubscribe","placeholder","autoComplete","email","phone","cols","rows","Head"],"sourceRoot":""}